{"version":3,"sources":["components/Meta.tsx","components/ProfilePicture.tsx","components/Records.tsx","service/EventService.ts","store.tsx","App.tsx","index.tsx"],"names":["MetaContainer","styled","div","Meta","activeChannels","joinedChannels","ProfilePicture","src","width","height","alt","RecordsContainer","Records","records","map","record","RecordComponent","RecordConatiner","title","scores","score","user","profilePicture","displayName","className","id","EventService","apiBaseUrl","callback","connect","ws","WebSocket","replace","onmessage","event","JSON","parse","data","onclose","e","console","log","reason","setTimeout","onerror","err","error","close","defaultContext","state","process","setState","store","createContext","Provider","StateProvider","children","useState","value","AppContainer","main","App","useContext","setJoinedChannels","setActiveChannels","setRecords","useEffect","message","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","document","getElementById"],"mappings":"wKAEMA,EAAgBC,IAAOC,IAAV,sMASZ,SAASC,EAAT,GAA0E,IAA3DC,EAA0D,EAA1DA,eAAgBC,EAA0C,EAA1CA,eAClC,OAAO,eAACL,EAAD,+BACc,iCAASK,IADvB,uBACmE,iCAASD,OCbhF,SAASE,IAA0K,IAAD,yDAA/H,CAAEC,IAAK,sHAAhCA,EAAwJ,EAAxJA,IAC7B,OAAO,qBAAKA,IAAKA,EAAKC,MAAO,KAAMC,OAAQ,KAAMC,IAAI,YCGzD,IAAMC,EAAmBV,IAAOC,IAAV,gDAIf,SAASU,EAAT,GAA2D,IAAxCC,EAAuC,EAAvCA,QACtB,OAAO,cAACF,EAAD,UACFE,EAAQC,KAAI,SAAAC,GAAM,OAAI,cAACC,EAAD,CAAiBD,OAAQA,SAKxD,IAAME,EAAkBhB,IAAOC,IAAV,y4BA2CrB,SAASc,EAAT,GAA0D,IAA/BD,EAA8B,EAA9BA,OACvB,OAAO,eAACE,EAAD,WACH,6BAAKF,EAAOG,QACZ,6BACKH,EAAOI,OAAOL,KAAI,SAAAM,GAAK,OAAI,+BACxB,cAACd,EAAD,CAAgBC,IAAKa,EAAMC,KAAKC,iBAChC,+BAAOF,EAAMC,KAAKE,cAClB,sBAAMC,UAAW,QAAjB,SAA2BJ,EAAMA,UAHAA,EAAMC,KAAKI,Y,gBC5DvCC,EACjB,WAAYC,EAAoBC,GAAyC,oBAErE,SAASC,IACL,IAAIC,EAAK,IAAIC,UAAJ,UAAiBJ,EAAWK,QAAQ,WAAY,UAAUA,QAAQ,UAAW,SAA7E,YAETF,EAAGG,UAAY,SAACC,GACZN,EAASO,KAAKC,MAAMF,EAAMG,QAG9BP,EAAGQ,QAAU,SAAAC,GACTC,QAAQC,IAAI,6DAA8DF,EAAEG,QAC5EC,WAAWd,EAAS,MAGxBC,EAAGc,QAAU,SAAAC,GACTL,QAAQM,MAAM,6BAA8BD,EAAK,kBACjDf,EAAGiB,SAIXlB,I,QCfFmB,EAAiB,CACnBC,MAAO,CACHtB,WAAYuB,oCAEhBC,SAAU,SAACF,MAGTG,EAAQC,wBAAcL,GACpBM,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,SAAuD,EAClDC,mBAAS,eAAKT,EAAeC,QADqB,mBACrEA,EADqE,KAC9DE,EAD8D,KAG5E,OAAO,cAACG,EAAD,CAAUI,MAAO,CAAET,QAAOE,YAA1B,SAAuCK,KCb5CG,EAAe1D,IAAO2D,KAAV,kCAIX,SAASC,IAAO,IACXZ,EAAUa,qBAAWV,GAArBH,MADU,EAE0BQ,mBAAS,GAFnC,mBAEXpD,EAFW,KAEK0D,EAFL,OAG0BN,mBAAS,GAHnC,mBAGXrD,EAHW,KAGK4D,EAHL,OAIYP,mBAAwB,IAJpC,mBAIX5C,EAJW,KAIFoD,EAJE,KAclB,OARAC,qBAAU,WACN,IAAIxC,EAAauB,EAAMtB,YAAY,SAACwC,GAChCJ,EAAkBI,EAAQ9D,gBAC1B2D,EAAkBG,EAAQ/D,gBAC1B6D,EAAWE,EAAQtD,cAExB,CAACoC,EAAMtB,aAEH,eAACgC,EAAD,WACH,cAACxD,EAAD,CAAMC,eAAgBA,EAAgBC,eAAgBA,IACtD,cAACO,EAAD,CAASC,QAASA,OCtB1B,IAAMuD,EAAcC,YAAH,0eAwBjBC,IAASC,OACL,cAAC,aAAD,UACI,cAAC,EAAD,UACI,eAAC,IAAMC,SAAP,WACI,cAACJ,EAAD,IACA,cAACP,EAAD,WAIZY,SAASC,eAAe,W","file":"static/js/main.de7453b1.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst MetaContainer = styled.div`\n    display: inline-block;\n    background: var(--bg-bright);\n    border: 1px solid var(--bg-brighter);\n    padding: 0.5rem;\n    margin: 1rem;\n    margin-bottom: 0;\n`;\n\nexport function Meta({activeChannels, joinedChannels}: {[key: string]: number}) {\n    return <MetaContainer>\n        Joined Channels: <strong>{joinedChannels}</strong> | Active Channels: <strong>{activeChannels}</strong>\n    </MetaContainer> \n}","export function ProfilePicture({ src }: { src: string } = { src: \"https://static-cdn.jtvnw.net/user-default-pictures-uv/cdd517fe-def4-11e9-948e-784f43822e80-profile_image-70x70.png\" }) {\r\n    return <img src={src} width={\"30\"} height={\"30\"} alt=\"profile\" />;\r\n}","import styled from \"styled-components\";\nimport { ProfilePicture } from \"./ProfilePicture\";\nimport { Record } from \"../types/Events\";\n\nconst RecordsContainer = styled.div`\n    display: flex;\n`;\n\nexport function Records({ records }: { records: Array<Record> }) {\n    return <RecordsContainer>\n        {records.map(record => <RecordComponent record={record} />)}\n\n    </RecordsContainer>\n}\n\nconst RecordConatiner = styled.div`\n    background: var(--bg-bright);\n    border: 1px solid var(--bg-brighter);\n    margin: 1rem;\n    margin-right: 0;\n    padding: 1rem;\n\n    h2 {\n        color: var(--text);\n        margin: 0;\n        margin-bottom: 1rem;\n        padding: 0;\n    }\n\n    ol {\n        color: white;\n        font-size: 1.5rem;\n        font-weight: bold;\n        width: 500px;\n        padding: 0;\n        margin: 0;\n        margin-right: 15px;\n        background: var(--lightBackground);\n        border: 1px solid var(--lightBorder);\n        border-radius: 3px;\n\n        li {\n            display: flex;\n            align-items: center;\n            margin-bottom: 0.25rem;\n\n            img {\n                margin-right: 10px;\n            }\n\n            .value {\n                text-align: right;\n                flex: 1 1 auto;\n            }\n        }\n    }\n`;\n\nfunction RecordComponent({ record }: { record: Record }) {\n    return <RecordConatiner>\n        <h2>{record.title}</h2>\n        <ol>\n            {record.scores.map(score => <li key={score.user.id}>\n                <ProfilePicture src={score.user.profilePicture} />\n                <span>{score.user.displayName}</span>\n                <span className={\"value\"}>{score.score}</span>\n            </li>)}\n        </ol>\n    </RecordConatiner>\n}","import { EventMessage } from \"../types/Events\";\n\nexport default class EventService {\n    constructor(apiBaseUrl: string, callback: (data: EventMessage) => void) {\n\n        function connect() {\n            var ws = new WebSocket(`${apiBaseUrl.replace(\"https://\", \"wss://\").replace(\"http://\", \"ws://\")}/api/ws`);\n            \n            ws.onmessage = (event) => {\n                callback(JSON.parse(event.data));\n            };\n\n            ws.onclose = e => {\n                console.log('Socket is closed. Reconnect will be attempted in 1 second.', e.reason);\n                setTimeout(connect, 1000);\n            };\n\n            ws.onerror = err => {\n                console.error('Socket encountered error: ', err, 'Closing socket');\n                ws.close();\n            };\n        }\n\n        connect();\n    }\n}\n\n","import { createContext, useState } from \"react\";\n\nexport interface State {\n    apiBaseUrl: string,\n}\n\nexport type Action = Record<string, unknown>;\n\nconst defaultContext = {\n    state: {\n        apiBaseUrl: process.env.REACT_APP_API_BASE_URL,\n    } as State,\n    setState: (state: State) => { },\n};\n\nconst store = createContext(defaultContext);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }: { children: JSX.Element }): JSX.Element => {\n    const [state, setState] = useState({ ...defaultContext.state });\n\n    return <Provider value={{ state, setState }}>{children}</Provider>;\n};\n\nexport { store, StateProvider };\n","import { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Meta } from \"./components/Meta\";\nimport { Records } from \"./components/Records\";\nimport EventService from \"./service/EventService\";\nimport { store } from \"./store\";\nimport { EventMessage, Record } from \"./types/Events\";\n\nconst AppContainer = styled.main`\n    \n`\n\nexport function App() {\n    const { state } = useContext(store);\n    const [joinedChannels, setJoinedChannels] = useState(0);\n    const [activeChannels, setActiveChannels] = useState(0);\n    const [records, setRecords] = useState<Array<Record>>([]);\n\n    useEffect(() => {\n        new EventService(state.apiBaseUrl, (message: EventMessage) => {\n            setJoinedChannels(message.joinedChannels);\n            setActiveChannels(message.activeChannels);\n            setRecords(message.records);\n        });\n    }, [state.apiBaseUrl])\n\n    return <AppContainer>\n        <Meta activeChannels={activeChannels} joinedChannels={joinedChannels} />\n        <Records records={records} /> \n    </AppContainer>\n}","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { App } from './App';\nimport { StateProvider } from './store';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    --bg: #0e0e10;\n    --bg-bright: #18181b;\n    --bg-brighter: #3d4146;\n    --bg-dark: #121416;\n    --theme: #00CC66;\n    --theme-bright: #00FF80;\n    --theme2: #2980b9;\n    --theme2-bright: #3498db;\n    --text: #F5F5F5;\n    --text-dark: #616161;\n\n    background: var(--bg);\n    margin: 0;\n    padding: 0;\n    color: var(--text);\n    margin: 0;\n    font-family: Helvetica, Arial, sans-serif;\n    height: 100%;\n    width: 100%;\n  }\n`\n\nReactDOM.render(\n    <StrictMode>\n        <StateProvider>\n            <React.Fragment>\n                <GlobalStyle />\n                <App />\n            </React.Fragment>\n        </StateProvider>\n    </StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}