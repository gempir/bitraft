{"version":3,"sources":["store/reducer.js","store/createInitialState.ts","storage/loadState.js","service/EventService.ts","storage/persistState.js","actions/fetchChannels.js","actions/addChannels.js","components/ProfilePicture.jsx","components/Record.jsx","components/Base.jsx","App.tsx","index.tsx"],"names":["reducer","state","action","type","channels","createInitialState","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","loading","apiBaseUrl","process","EventService","callback","connect","ws","WebSocket","replace","onmessage","event","data","onclose","e","console","log","reason","setTimeout","onerror","error","close","persistState","stringify","setItem","fetchChannels","channelIds","dispatch","getState","channelIdsToFetch","channelId","hasOwnProperty","push","length","Promise","resolve","reject","fetch","join","then","response","status","Error","statusText","json","catch","ProfilePicture","this","props","width","height","alt","React","Component","defaultProps","src","Record","className","record","title","scores","map","score","id","profile_image_url","display_name","Base","joinedChannels","activeChannels","records","setState","Set","flat","path","App","store","createStore","applyMiddleware","thunk","subscribe","ReactDOM","render","document","getElementById"],"mappings":"0NAAO,SAASA,EAAQC,EAAOC,GAC3B,OAAQA,EAAOC,MACX,IAAK,eACD,OAAO,2BAAIF,GAAX,IAAkBG,SAAUF,EAAOE,WACvC,QACI,OAAO,eAAIH,ICHhB,SAASI,IACZ,IAAMC,ECHH,WACH,IACI,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,OAAwB,OAApBF,EACO,GAEJG,KAAKC,MAAMJ,GACpB,MAAOK,GACL,MAAO,IDLYC,GAEvB,OAAO,aACHC,SAAS,EACTV,SAAU,GACVW,WAAYC,oCACTV,G,IETUW,EACjB,WAAYF,EAAoBG,GAAoD,oBAEhF,SAASC,IACL,IAAIC,EAAK,IAAIC,UAAJ,UAAiBN,EAAWO,QAAQ,WAAY,UAAUA,QAAQ,UAAW,SAA7E,YAETF,EAAGG,UAAY,SAACC,GACZN,EAASR,KAAKC,MAAMa,EAAMC,QAG9BL,EAAGM,QAAU,SAAAC,GACTC,QAAQC,IAAI,6DAA8DF,EAAEG,QAC5EC,WAAWZ,EAAS,MAGxBC,EAAGY,QAAU,SAAApB,GACTgB,QAAQK,MAAM,6BAA8BrB,EAAK,kBACjDQ,EAAGc,SAIXf,I,QCrBD,SAASgB,EAAalC,GACzB,IACI,IAAMM,EAAkBG,KAAK0B,UAAUnC,GACvCO,aAAa6B,QAAQ,QAAS9B,GAChC,WCDC,SAAS+B,EAAcC,GAC1B,OAAO,SAAUC,EAAUC,GAEvB,IAFiC,EAE3BC,EAAoB,GACpBzC,EAAQwC,IAHmB,cAITF,GAJS,IAIjC,2BAAoC,CAAC,IAA1BI,EAAyB,QAC3B1C,EAAMG,SAASwC,eAAeD,IAC/BD,EAAkBG,KAAKF,IANE,8BAUjC,GAAiC,IAA7BD,EAAkBI,OAItB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBC,MAAM,GAAD,OAAIT,IAAW1B,WAAf,mCAAoD2B,EAAkBS,KAAK,OAAQC,MAAK,SAACC,GAC1F,GAAIA,EAASC,QAAU,KAAOD,EAASC,OAAS,IAC5C,OAAOD,EAEP,IAAMpB,EAAQ,IAAIsB,MAAMF,EAASG,YAEjC,MADAvB,EAAMoB,SAAWA,EACXpB,KAEXmB,MAAK,SAACC,GACL,OAAOA,EAASI,UACjBL,MAAK,SAACK,GC7Bd,IAAqBrD,ED8BZoC,GC9BYpC,ED8BSqD,EC7B1B,SAAUjB,EAAUC,GACvBD,EAAS,CACLrC,KAAM,eACNC,SAAS,2BAAKqC,IAAWrC,UAAaA,QD0BNgD,MAAK,kBAAMjB,EAAaM,QAEpDO,OACDU,OAAM,SAAA9C,GACLqC,EAAOrC,U,0BEhCF+C,E,4JAKjB,WACI,OAAO,+CAASC,KAAKC,OAAd,IAAqBC,MAAO,KAAMC,OAAQ,KAAMC,IAAI,iB,GANvBC,IAAMC,WAA7BP,EACVQ,aAAe,CAClBC,IAAK,sH,ICAPC,E,4JACF,WAAU,IAAD,OACL,OAAO,sBAAKC,UAAU,SAAf,UACH,6BAAKV,KAAKC,MAAMU,OAAOC,QACvB,6BACKZ,KAAKC,MAAMU,OAAOE,OAAOC,KAAI,SAAAC,GAAK,iBAAI,+BACnC,cAAC,EAAD,CAAgBP,IAAG,UAAE,EAAKP,MAAMzD,SAASuE,EAAMC,WAA5B,aAAE,EAA+BC,oBACpD,mDAAO,EAAKhB,MAAMzD,SAASuE,EAAMC,WAAjC,aAAO,EAA+BE,oBAAtC,QAAsD,KACtD,sBAAMR,UAAW,QAAjB,SAA2BK,EAAMA,UAHWA,EAAMC,gB,GALjDX,IAAMC,WAeZ/C,eAAQ,SAAAlB,GAAK,MAAK,CAC7BG,SAAUH,EAAMG,YADLe,CAEXkD,GCdEU,E,4MAEF9E,MAAQ,CACJ+E,eAAgB,KAChBC,eAAgB,KAChBC,QAAS,I,uDAGb,WAAqB,IAAD,OAChB,IAAIjE,EAAa2C,KAAKC,MAAM9C,YAAY,SAAAU,GACpC,EAAK0D,SAAS,CACVH,eAAgBvD,EAAKuD,eACrBC,eAAgBxD,EAAKwD,eACrBC,QAASzD,EAAKyD,UAElB,EAAKrB,MAAMrB,SAASF,EAAc,IAAI8C,IAAI3D,EAAKyD,QAAQR,KAAI,SAAAH,GAAM,OAAIA,EAAOE,UAAQY,OAAOX,KAAI,SAAAC,GAAK,OAAIA,EAAMC,c,oBAItH,WACI,OACI,cAAC,IAAD,UACI,sBAAKN,UAAW,OAAhB,UACI,uBAAMA,UAAU,OAAhB,UAAwBV,KAAK3D,MAAM+E,eAAnC,sBAAsEpB,KAAK3D,MAAMgF,eAAjF,sBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAOK,KAAK,IAAZ,SACK1B,KAAK3D,MAAMiF,QAAQR,KAAI,SAAAH,GAAM,OAAI,cAAC,EAAD,CAAQA,OAAQA,GAAaA,EAAOC,uB,GA1B/EP,IAAMC,WAmCV/C,eAAQ,SAAAlB,GAAK,MAAK,CAAEc,WAAYd,EAAMc,cAAtCI,CAAqD4D,GChC/CQ,E,kDAGpB,WAAY1B,GAAY,IAAD,8BACtB,cAAMA,IAHE2B,WAEc,EAGtB,EAAKA,MAAQC,YAAYzF,EAASK,IAAsBqF,YAAgBC,MAExE,EAAKH,MAAMI,WAAU,kBAAMzD,EAAa,EAAKqD,MAAM/C,eAL7B,E,0CAQvB,WACC,OACC,cAAC,IAAD,CAAU+C,MAAO5B,KAAK4B,MAAtB,SACC,cAAC,EAAD,U,GAd6BtB,a,MCNjC2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3efcd708.chunk.js","sourcesContent":["export function reducer(state, action) {\n    switch (action.type) {\n        case \"SET_CHANNELS\":\n            return {...state, channels: action.channels};\n        default:\n            return {...state};\n    }\n};","import {loadState} from \"../storage/loadState\";\n\nexport function createInitialState() {\n    const persistedState = loadState();\n\n    return {\n        loading: false,\n        channels: {},\n        apiBaseUrl: process.env.REACT_APP_API_BASE_URL,\n        ...persistedState,\n    }\n}","export function loadState() {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return {};\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return {};\n    }\n}; ","export default class EventService {\n    constructor(apiBaseUrl: string, callback: (data: Record<string, unknown>) => void) {\n\n        function connect() {\n            var ws = new WebSocket(`${apiBaseUrl.replace(\"https://\", \"wss://\").replace(\"http://\", \"ws://\")}/api/ws`);\n            \n            ws.onmessage = (event) => {\n                callback(JSON.parse(event.data));\n            };\n\n            ws.onclose = e => {\n                console.log('Socket is closed. Reconnect will be attempted in 1 second.', e.reason);\n                setTimeout(connect, 1000);\n            };\n\n            ws.onerror = err => {\n                console.error('Socket encountered error: ', err, 'Closing socket');\n                ws.close();\n            };\n        }\n\n        connect();\n    }\n}\n\n","export function persistState(state) {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch {\n        // ignore write errors\n    }\n}","import {addChannels} from \"./addChannels\";\r\nimport {persistState} from \"../storage/persistState\";\r\n\r\nexport function fetchChannels(channelIds) {\r\n    return function (dispatch, getState) {\r\n\r\n        const channelIdsToFetch = [];\r\n        const state = getState();\r\n        for (const channelId of channelIds) {\r\n            if (!state.channels.hasOwnProperty(channelId)) {\r\n                channelIdsToFetch.push(channelId);\r\n            }\r\n        }\r\n\r\n        if (channelIdsToFetch.length === 0) {\r\n            return;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`${getState().apiBaseUrl}/api/channel?channelids=${channelIdsToFetch.join(\",\")}`).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response\r\n                } else {\r\n                    const error = new Error(response.statusText);\r\n                    error.response = response;\r\n                    throw error\r\n                }\r\n            }).then((response) => {\r\n                return response.json();\r\n            }).then((json) => {\r\n                dispatch(addChannels(json)).then(() => persistState(getState()));\r\n\r\n                resolve();\r\n            }).catch(err => {\r\n                reject(err);\r\n            });\r\n        });\r\n    };\r\n}","export function addChannels(channels) {\r\n    return function (dispatch, getState) {\r\n        dispatch({\r\n            type: \"SET_CHANNELS\",\r\n            channels: {...getState().channels, ...channels}\r\n        });\r\n    };\r\n}","import React from \"react\";\r\n\r\nexport default class ProfilePicture extends React.Component {\r\n    static defaultProps = {\r\n        src: \"https://static-cdn.jtvnw.net/user-default-pictures-uv/cdd517fe-def4-11e9-948e-784f43822e80-profile_image-70x70.png\",\r\n    };\r\n\r\n    render() {\r\n        return <img {...this.props} width={\"30\"} height={\"30\"} alt=\"profile\" />;\r\n    }\r\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ProfilePicture from \"./ProfilePicture\";\n\nclass Record extends React.Component {\n    render() {\n        return <div className=\"Record\">\n            <h2>{this.props.record.title}</h2>\n            <ol>\n                {this.props.record.scores.map(score => <li key={score.id}>\n                    <ProfilePicture src={this.props.channels[score.id]?.profile_image_url} />\n                    <span>{this.props.channels[score.id]?.display_name ?? \"\"}</span>\n                    <span className={\"value\"}>{score.score}</span>\n                </li>)}\n            </ol>\n        </div>\n    }\n}\n\nexport default connect(state => ({\n    channels: state.channels,\n}))(Record);","import React from \"react\";\nimport EventService from \"../service/EventService\";\nimport { connect } from \"react-redux\";\nimport {fetchChannels} from \"../actions/fetchChannels\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Record from \"./Record\";\n\nclass Base extends React.Component {\n\n    state = {\n        joinedChannels: null,\n        activeChannels: null,\n        records: [],\n    };\n\n    componentDidMount() {\n        new EventService(this.props.apiBaseUrl, data => {\n            this.setState({\n                joinedChannels: data.joinedChannels,\n                activeChannels: data.activeChannels,\n                records: data.records,\n            });\n            this.props.dispatch(fetchChannels(new Set(data.records.map(record => record.scores).flat().map(score => score.id))));\n        });\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className={\"Base\"}>\n                    <span className=\"Meta\">{this.state.joinedChannels} joined channels | {this.state.activeChannels} active channels</span>\n                    <Switch>\n                        <Route path=\"/\">\n                            {this.state.records.map(record => <Record record={record} key={record.title} />)}\n                        </Route>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default connect(state => ({ apiBaseUrl: state.apiBaseUrl }))(Base);","import React, { Component } from 'react';\nimport { createStore, applyMiddleware, Store } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport {reducer} from \"./store/reducer\";\nimport {createInitialState} from \"./store/createInitialState\";\nimport Base from './components/Base';\nimport {persistState} from './storage/persistState';\n\n\nexport default class App extends Component {\n  private store: Store;\n\n\tconstructor(props: {}) {\n\t\tsuper(props);\n\n\t\tthis.store = createStore(reducer, createInitialState(), applyMiddleware(thunk));\n\n\t\tthis.store.subscribe(() => persistState(this.store.getState()));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={this.store}>\n\t\t\t\t<Base />\n\t\t\t</Provider>\n\t\t);\n\t}\n}","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './scss/app.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}