{"version":3,"sources":["components/Meta.tsx","components/ProfilePicture.tsx","components/Records.tsx","service/EventService.ts","store.tsx","components/Login.tsx","hooks/useUserConfig.ts","components/Reset.tsx","components/Dashboard.tsx","App.tsx","index.tsx"],"names":["MetaContainer","styled","div","Meta","activeChannels","joinedChannels","ProfilePicture","src","width","height","alt","RecordsContainer","Records","records","map","record","RecordComponent","title","RecordConatiner","scores","score","user","profilePicture","displayName","className","id","EventService","apiBaseUrl","callback","connect","ws","WebSocket","replace","onmessage","event","JSON","parse","data","onclose","e","console","log","reason","setTimeout","onerror","err","error","close","defaultContext","state","process","twitchClientId","baseUrl","scToken","window","localStorage","getItem","setState","setScToken","store","createContext","Provider","StateProvider","children","useState","value","removeItem","setItem","LoginContainer","a","Login","useContext","LoggedIn","href","createOAuthUrl","toString","ButtonsContainer","LoggedInContainer","DashboardButton","loginText","setLoginText","to","onMouseEnter","onMouseLeave","clientId","url","URL","searchParams","set","stringify","checkToken","response","status","ResetContainer","Reset","setUserConfig","onClick","Dashboard","classNames","setClassNames","onSave","undefined","userConfig","changeCounter","setChangeCounter","fetchConfig","fetch","headers","Authorization","then","json","catch","useEffect","useDebounce","method","body","config","useUserConfig","newClassNames","slice","push","userCfg","DashboardContainer","join","type","checked","Redemptions","Bttv","Active","onChange","newConfig","target","Title","spellCheck","AppContainer","main","App","setJoinedChannels","setActiveChannels","setRecords","hash","location","history","replaceState","token","message","path","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.b725bd46.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst MetaContainer = styled.div`\n    display: inline-block;\n    background: var(--bg-bright);\n    border: 1px solid var(--bg-brighter);\n    padding: 0.5rem;\n    margin: 1rem;\n    margin-right: 0;\n    margin-bottom: 0;\n`;\n\nexport function Meta({ activeChannels, joinedChannels }: { [key: string]: number }) {\n    return <>\n        <MetaContainer>\n            Joined Channels: <strong>{joinedChannels}</strong>\n        </MetaContainer>\n        <MetaContainer>\n            Active Channels: <strong>{activeChannels}</strong>\n        </MetaContainer>\n    </>\n}","export function ProfilePicture({ src }: { src: string } = { src: \"https://static-cdn.jtvnw.net/user-default-pictures-uv/cdd517fe-def4-11e9-948e-784f43822e80-profile_image-70x70.png\" }) {\r\n    return <img src={src} width={\"30\"} height={\"30\"} alt=\"profile\" />;\r\n}","import styled from \"styled-components\";\nimport { ProfilePicture } from \"./ProfilePicture\";\nimport { Record } from \"../types/Events\";\n\nconst RecordsContainer = styled.div`\n    display: flex;\n`;\n\nexport function Records({ records }: { records: Array<Record> }) {\n    return <RecordsContainer>\n        {records.map(record => <RecordComponent key={record.title} record={record} />)}\n\n    </RecordsContainer>\n}\n\nconst RecordConatiner = styled.div`\n    background: var(--bg-bright);\n    border: 1px solid var(--bg-brighter);\n    margin: 1rem;\n    margin-right: 0;\n    padding: 1rem;\n\n    h2 {\n        color: var(--text);\n        margin: 0;\n        margin-bottom: 1rem;\n        padding: 0;\n    }\n\n    ol {\n        color: white;\n        font-size: 1.5rem;\n        font-weight: bold;\n        width: 500px;\n        padding: 0;\n        margin: 0;\n        margin-right: 15px;\n        background: var(--lightBackground);\n        border: 1px solid var(--lightBorder);\n        border-radius: 3px;\n\n        li {\n            display: flex;\n            align-items: center;\n            margin-bottom: 0.25rem;\n\n            img {\n                margin-right: 10px;\n            }\n\n            .value {\n                text-align: right;\n                flex: 1 1 auto;\n            }\n        }\n    }\n`;\n\nfunction RecordComponent({ record }: { record: Record }) {\n    return <RecordConatiner>\n        <h2>{record.title}</h2>\n        <ol>\n            {record.scores.map(score => <li key={score.user.id}>\n                <ProfilePicture src={score.user.profilePicture} />\n                <span>{score.user.displayName}</span>\n                <span className={\"value\"}>{score.score}</span>\n            </li>)}\n        </ol>\n    </RecordConatiner>\n}","import { EventMessage } from \"../types/Events\";\n\nexport default class EventService {\n    constructor(apiBaseUrl: string, callback: (data: EventMessage) => void) {\n\n        function connect() {\n            var ws = new WebSocket(`${apiBaseUrl.replace(\"https://\", \"wss://\").replace(\"http://\", \"ws://\")}/api/ws`);\n            \n            ws.onmessage = (event) => {\n                callback(JSON.parse(event.data));\n            };\n\n            ws.onclose = e => {\n                console.log('Socket is closed. Reconnect will be attempted in 1 second.', e.reason);\n                setTimeout(connect, 1000);\n            };\n\n            ws.onerror = err => {\n                console.error('Socket encountered error: ', err, 'Closing socket');\n                ws.close();\n            };\n        }\n\n        connect();\n    }\n}\n\n","import { createContext, useState } from \"react\";\n\nexport interface State {\n    apiBaseUrl: string,\n    twitchClientId: string,\n    baseUrl: string,\n    scToken: string | null,\n}\n\nexport type Action = Record<string, unknown>;\n\nconst defaultContext = {\n    state: {\n        apiBaseUrl: process.env.REACT_APP_API_BASE_URL,\n        twitchClientId: process.env.REACT_APP_TWITCH_CLIENT_ID,\n        baseUrl: process.env.REACT_APP_BASE_URL,\n        scToken: window.localStorage.getItem(\"scToken\")\n    } as State,\n    setState: (state: State) => { },\n    setScToken: (scToken: string | null) => { },\n};\n\nconst store = createContext(defaultContext);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }: { children: JSX.Element }): JSX.Element => {\n    const [state, setState] = useState({ ...defaultContext.state });\n\n    const setScToken = (scToken: string | null) => {\n        if (scToken === null) {\n            window.localStorage.removeItem(\"scToken\");\n        } else {\n            window.localStorage.setItem(\"scToken\", scToken);\n        }\n\n        setState({...state, scToken});\n    };\n\n    return <Provider value={{ state, setState, setScToken }}>{children}</Provider>;\n};\n\nexport { store, StateProvider };\n","import { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { store } from \"./../store\";\n\nconst LoginContainer = styled.a`\n    position: absolute;\n    display: block;\n    color: white;\n    top: 1rem;\n    right: 1rem;\n    padding: 1rem 2rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--twitch);\n\n    &:hover {\n        background: var(--twitch-dark);\n    }\n`;\n\nexport function Login() {\n    const { state } = useContext(store);\n\n    if (state.scToken) {\n        return <LoggedIn />;\n    }\n\n    return <LoginContainer href={createOAuthUrl(state.twitchClientId, state.apiBaseUrl).toString()}>Login</LoginContainer>;\n}\n\nconst ButtonsContainer = styled.div`\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    display: flex;\n\n    a {\n        text-decoration: none;\n    }\n`;\n\nconst LoggedInContainer = styled.a`\n    display: block;\n    color: white;\n    width: 150px;\n    padding: 1rem 2rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--twitch);\n    cursor: pointer;\n\n    &:hover {\n        background: var(--twitch-dark);\n    }\n`;\n\nconst DashboardButton = styled.div`\n    display: block;\n    color: white;\n    margin-right: 1rem;\n    padding: 1rem 2rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--theme2-dark);\n    cursor: pointer;\n\n    &.dashboard {\n        background: var(--theme);\n\n        &:hover {\n        background: var(--theme-bright);\n    }\n    }\n\n    &:hover {\n        background: var(--theme2);\n    }\n`;\n\nfunction LoggedIn() {\n    const { state } = useContext(store);\n    const [loginText, setLoginText] = useState(\"Logged In\");\n\n\n\n    return <ButtonsContainer>\n        <Link to=\"/\">\n            <DashboardButton>\n                Home\n            </DashboardButton>\n        </Link>\n        <Link to=\"/dashboard\">\n            <DashboardButton className=\"dashboard\">\n                Dashboard\n            </DashboardButton>\n        </Link>\n        <LoggedInContainer href={createOAuthUrl(state.twitchClientId, state.apiBaseUrl).toString()} onMouseEnter={() => setLoginText(\"force login\")} onMouseLeave={() => setLoginText(\"Logged In\")}>\n            {loginText}\n        </LoggedInContainer>\n    </ButtonsContainer>;\n}\n\nfunction createOAuthUrl(clientId: string, apiBaseUrl: string): URL {\n    const url = new URL(\"https://id.twitch.tv/oauth2/authorize\")\n    url.searchParams.set(\"client_id\", clientId);\n    url.searchParams.set(\"redirect_uri\", apiBaseUrl + \"/api/callback\");\n    url.searchParams.set(\"response_type\", \"code\");\n    url.searchParams.set(\"claims\", JSON.stringify({ \"userinfo\": { \"picture\": null, \"preferred_username\": null, } }));\n    url.searchParams.set(\"scope\", \"channel:read:redemptions channel:manage:redemptions\");\n\n    return url;\n}","import { useContext, useEffect, useState } from \"react\";\nimport { useDebounce } from \"react-use\";\nimport { store } from \"../store\";\n\nexport interface UserConfig {\n    Redemptions: Redemptions;\n}\n\nexport interface Redemptions {\n    Bttv: Redemption;\n}\n\nexport interface Redemption {\n    Title: string;\n    Active: boolean;\n}\n\n\nexport function useUserConfig(onSave: () => void): [UserConfig | null | undefined, (userConfig: UserConfig | null) => void] {\n    const { scToken, apiBaseUrl } = useContext(store).state;\n    const { setScToken } = useContext(store);\n\n    const [userConfig, setUserConfig] = useState<UserConfig | null | undefined>(undefined);\n    const [changeCounter, setChangeCounter] = useState(0);\n\n    const fetchConfig = () => {\n        if (scToken) {\n            fetch(apiBaseUrl + \"/api/userConfig\", { headers: { Authorization: \"Bearer \" + scToken } })\n                .then(response => checkToken(setScToken, response))\n                .then(response => response.json())\n                .then((userConfig) => setUserConfig(userConfig))\n                .catch();\n        }\n    };\n\n    useEffect(fetchConfig, [scToken, apiBaseUrl, setScToken]);\n\n\n    useDebounce(() => {\n        if (changeCounter && userConfig && scToken) {\n            fetch(apiBaseUrl + \"/api/userConfig\", { headers: { Authorization: \"Bearer \" + scToken }, method: \"POST\", body: JSON.stringify(userConfig) })\n            .then(response => checkToken(setScToken, response))\n            .then(onSave);\n        } else if (changeCounter && userConfig === null && scToken) {\n            fetch(apiBaseUrl + \"/api/userConfig\", { headers: { Authorization: \"Bearer \" + scToken }, method: \"DELETE\"})\n            .then(response => checkToken(setScToken, response))\n            .then(fetchConfig);\n        }\n    }, 500, [changeCounter]);\n\n    const setCfg = (config: UserConfig | null) => {\n        setUserConfig(config);\n        setChangeCounter(changeCounter + 1);\n    };\n\n    return [userConfig, setCfg]\n}\n\nfunction checkToken(setScToken: (scToken: string | null) => void, response: Response) {\n    if (response.status === 403) {\n        setScToken(null);\n    }\n\n    return response\n}","import styled from \"styled-components\";\nimport { UserConfig } from \"../hooks/useUserConfig\";\n\n\nconst ResetContainer = styled.div`\n    position: absolute;\n    top: 1rem;\n    left: 1rem;\n    display: block;\n    color: white;\n    padding: 1rem 2rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--danger-dark);\n    cursor: pointer;\n\n    &:hover {\n        background: var(--danger);\n    }\n`;\n\nexport function Reset({ setUserConfig }: { setUserConfig: (userConfig: UserConfig | null) => void }) {\n    return <ResetContainer onClick={() => setUserConfig(null)}>Reset</ResetContainer>;\n}","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useUserConfig } from \"../hooks/useUserConfig\";\nimport { Reset } from \"./Reset\";\n\nexport function Dashboard() {\n    const [classNames, setClassNames] = useState([\"userConfig\"]);\n\n    const [userCfg, setUserConfig] = useUserConfig(() => {\n        const newClassNames = classNames.slice();\n        newClassNames.push(\"saved\");\n        setClassNames(newClassNames)\n\n        setTimeout(() => {\n            setClassNames([\"userConfig\"]);\n        }, 500);\n    });\n\n    return <DashboardContainer>\n        {userCfg && <Reset setUserConfig={setUserConfig} />}\n        {userCfg && <div className={classNames.join(\" \")}>\n            <div className={\"redemption\"}>\n                <img src=\"/images/bttv.png\" alt={\"bttv\"} />\n                <label className=\"switch\">\n                    <input type=\"checkbox\" checked={userCfg.Redemptions.Bttv.Active} onChange={(e) => {\n                        const newConfig = JSON.parse(JSON.stringify(userCfg));\n                        newConfig.Redemptions.Bttv.Active = e.target.checked;\n\n                        setUserConfig(newConfig);\n                    }} />\n                    <span className=\"slider round\"></span>\n                </label>\n                <div className=\"redemption-title\">\n                    <span>Channel Points Reward Name</span>\n                    <input type=\"text\" value={userCfg.Redemptions.Bttv.Title} spellCheck={false} onChange={(e) => {\n                        const newConfig = JSON.parse(JSON.stringify(userCfg));\n                        newConfig.Redemptions.Bttv.Title = e.target.value;\n\n                        setUserConfig(newConfig);\n                    }} />\n                </div>\n                <span className=\"hint\">\n                    make sure <strong>gempbot</strong> is bttv editor\n                </span>\n            </div>\n        </div>}\n    </DashboardContainer>\n}\n\nconst DashboardContainer = styled.div`\n    margin-top: 5rem;\n    margin-left: 1rem;\n    margin-right: 1rem;\n\n    .userConfig {\n        padding-bottom: 2rem;\n        background: var(--bg);\n        transition: background-color ease-in-out 0.2s;\n\n        &.saved {\n            background: var(--theme);\n        }\n    }\n\n    .redemption {\n        display: flex;\n        align-items: center;\n        background: var(--bg-bright);\n        border: 1px solid var(--bg-brighter);\n        padding: 0.5rem;\n\n        img {\n            max-height: 3rem;\n            margin-left: 1rem;\n            margin-right: 2rem;\n        }\n\n        .redemption-title {\n            position: relative;\n\n            span {\n                position: absolute;\n                top: -13px;\n                left: 18px;\n                font-size: 11px;\n            }\n\n            input {\n                margin: 0;\n                padding: 0;\n                margin-left: 1rem;\n                font-size: 1rem;\n                background: var(--bg);\n                border: 1px solid var(--bg-bright);\n                padding: 5px;\n                color: white;\n\n                &:focus {\n                    outline: none;\n                    border: 1px solid var(--theme2);\n                }\n            }\n        }\n        \n        .hint {\n            margin-left: 1rem;\n\n            strong {\n                color: var(--theme-bright);\n            }\n        }\n    }\n\n    /* The switch - the box around the slider */\n    .switch {\n        position: relative;\n        display: inline-block;\n        width: 60px;\n        height: 34px;\n\n        input {\n            opacity: 0;\n            width: 0;\n            height: 0;\n        }\n    }\n    /* The slider */\n    .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: .4s;\n        transition: .4s;\n\n        &:before {\n            position: absolute;\n            content: \"\";\n            height: 26px;\n            width: 26px;\n            left: 4px;\n            bottom: 4px;\n            background-color: white;\n            -webkit-transition: .4s;\n            transition: .4s;\n        }\n    }\n\n    input:checked + .slider {\n        background-color: var(--theme-bright);\n    }\n\n    input:focus + .slider {\n     box-shadow: 0 0 1px var(--theme-bright);\n    }\n\n    input:checked + .slider:before {\n        -webkit-transform: translateX(26px);\n        -ms-transform: translateX(26px);\n        transform: translateX(26px);\n    }\n\n    .slider.round {\n        border-radius: 34px;\n\n        &:before {\n            border-radius: 50%;\n        }\n    }\n`;","import { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Meta } from \"./components/Meta\";\nimport { Records } from \"./components/Records\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport EventService from \"./service/EventService\";\nimport { store } from \"./store\";\nimport { EventMessage, Record } from \"./types/Events\";\nimport { Login } from \"./components/Login\";\nimport { Dashboard } from \"./components/Dashboard\";\n\nconst AppContainer = styled.main`\n\n`\n\nexport function App() {\n    const { state, setScToken } = useContext(store);\n    const [joinedChannels, setJoinedChannels] = useState(0);\n    const [activeChannels, setActiveChannels] = useState(0);\n    const [records, setRecords] = useState<Array<Record>>([]);\n\n    useEffect(() => {\n        const hash = window.location.hash;\n        window.location.hash = \"\";\n        window.history.replaceState(null, \"\", ' ');\n        if (hash) {\n            const token = hash.replace(\"#\", \"\");\n            \n            if (token){\n                setScToken(token);\n            }\n        }\n    }, [state.apiBaseUrl, setScToken]);\n\n    \n    useEffect(() => {\n        new EventService(state.apiBaseUrl, (message: EventMessage) => {\n            setJoinedChannels(message.joinedChannels);\n            setActiveChannels(message.activeChannels);\n            setRecords(message.records);\n        });\n    }, [state.apiBaseUrl]);\n\n    return <AppContainer>\n        <Router>\n            <Login />\n            <Switch>\n                <Route path=\"/dashboard\">\n                    <Dashboard />\n                </Route>\n                <Route path=\"/\">\n                    <Meta activeChannels={activeChannels} joinedChannels={joinedChannels} />\n                    <Records records={records} />\n                </Route>\n            </Switch>\n        </Router>\n\n    </AppContainer>\n}","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { App } from './App';\nimport { StateProvider } from './store';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        --bg: #0e0e10;\n        --bg-bright: #18181b;\n        --bg-brighter: #3d4146;\n        --bg-dark: #121416;\n        --theme: #009148;\n        --theme-bright: #00a552;\n        --theme2: #2980b9;\n        --theme2-bright: #3498db;\n        --theme2-dark: #24618a;\n        --text: #F5F5F5;\n        --text-dark: #616161;\n        --twitch: #6441a5;\n        --twitch-dark: #4c317e;\n        --danger: #e74c3c;\n        --danger-dark: #c0392b;\n\n        background: var(--bg);\n        margin: 0;\n        padding: 0;\n        color: var(--text);\n        margin: 0;\n        font-family: Helvetica, Arial, sans-serif;\n        height: 100%;\n        width: 100%;\n\n        * {\n            box-sizing: border-box;\n        }\n    }\n`\n\nReactDOM.render(\n    <StrictMode>\n        <StateProvider>\n            <React.Fragment>\n                <GlobalStyle />\n                <App />\n            </React.Fragment>\n        </StateProvider>\n    </StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}