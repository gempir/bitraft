{"version":3,"sources":["components/Meta.tsx","components/ProfilePicture.tsx","components/Records.tsx","service/EventService.ts","store.tsx","components/Login.tsx","App.tsx","index.tsx"],"names":["MetaContainer","styled","div","Meta","activeChannels","joinedChannels","ProfilePicture","src","width","height","alt","RecordsContainer","Records","records","map","record","RecordComponent","title","RecordConatiner","scores","score","user","profilePicture","displayName","className","id","EventService","apiBaseUrl","callback","connect","ws","WebSocket","replace","onmessage","event","JSON","parse","data","onclose","e","console","log","reason","setTimeout","onerror","err","error","close","defaultContext","state","process","twitchClientId","baseUrl","accessToken","window","localStorage","getItem","setState","store","createContext","Provider","StateProvider","children","useState","setStateDefault","value","partialState","LoginContainer","a","Login","useContext","useEffect","hash","location","match","exec","setItem","fetch","method","body","stringify","LoggedIn","url","URL","searchParams","set","href","toString","ButtonsContainer","LoggedInContainer","DashboardButton","loginText","setLoginText","to","onMouseEnter","onMouseLeave","AppContainer","main","App","setJoinedChannels","setActiveChannels","setRecords","message","path","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","document","getElementById"],"mappings":"yKAEMA,EAAgBC,IAAOC,IAAV,4NAUZ,SAASC,EAAT,GAA8E,IAA9DC,EAA6D,EAA7DA,eAAgBC,EAA6C,EAA7CA,eACnC,OAAO,qCACH,eAACL,EAAD,+BACqB,iCAASK,OAE9B,eAACL,EAAD,+BACqB,iCAASI,UClB/B,SAASE,IAA0K,IAAD,yDAA/H,CAAEC,IAAK,sHAAhCA,EAAwJ,EAAxJA,IAC7B,OAAO,qBAAKA,IAAKA,EAAKC,MAAO,KAAMC,OAAQ,KAAMC,IAAI,YCGzD,IAAMC,EAAmBV,IAAOC,IAAV,gDAIf,SAASU,EAAT,GAA2D,IAAxCC,EAAuC,EAAvCA,QACtB,OAAO,cAACF,EAAD,UACFE,EAAQC,KAAI,SAAAC,GAAM,OAAI,cAACC,EAAD,CAAoCD,OAAQA,GAAtBA,EAAOE,YAK5D,IAAMC,EAAkBjB,IAAOC,IAAV,y4BA2CrB,SAASc,EAAT,GAA0D,IAA/BD,EAA8B,EAA9BA,OACvB,OAAO,eAACG,EAAD,WACH,6BAAKH,EAAOE,QACZ,6BACKF,EAAOI,OAAOL,KAAI,SAAAM,GAAK,OAAI,+BACxB,cAACd,EAAD,CAAgBC,IAAKa,EAAMC,KAAKC,iBAChC,+BAAOF,EAAMC,KAAKE,cAClB,sBAAMC,UAAW,QAAjB,SAA2BJ,EAAMA,UAHAA,EAAMC,KAAKI,Y,mCC5DvCC,EACjB,WAAYC,EAAoBC,GAAyC,oBAErE,SAASC,IACL,IAAIC,EAAK,IAAIC,UAAJ,UAAiBJ,EAAWK,QAAQ,WAAY,UAAUA,QAAQ,UAAW,SAA7E,YAETF,EAAGG,UAAY,SAACC,GACZN,EAASO,KAAKC,MAAMF,EAAMG,QAG9BP,EAAGQ,QAAU,SAAAC,GACTC,QAAQC,IAAI,6DAA8DF,EAAEG,QAC5EC,WAAWd,EAAS,MAGxBC,EAAGc,QAAU,SAAAC,GACTL,QAAQM,MAAM,6BAA8BD,EAAK,kBACjDf,EAAGiB,SAIXlB,I,QCZFmB,EAAiB,CACnBC,MAAO,CACHtB,WAAYuB,mCACZC,eAAgBD,iCAChBE,QAASF,+BACTG,YAAaC,OAAOC,aAAaC,QAAQ,gBAE7CC,SAAU,SAACR,MAGTS,EAAQC,wBAAcX,GACpBY,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,SAAuD,EAC3CC,mBAAS,eAAKf,EAAeC,QADc,mBACrEA,EADqE,KAC9De,EAD8D,KAM5E,OAAO,cAACJ,EAAD,CAAUK,MAAO,CAAEhB,QAAOQ,SAFhB,SAACS,GAAD,OAAkCF,EAAgB,2BAAIf,GAAL,IAAYiB,oBAEvE,SAAuCJ,KCzB5CK,EAAiBlE,IAAOmE,EAAV,sUAiBb,SAASC,IAAS,IAAD,EACMC,qBAAWZ,GAA9BT,EADa,EACbA,MAAOQ,EADM,EACNA,SA0Bd,GAxBAc,qBAAU,WACN,IAAMC,EAAOlB,OAAOmB,SAASD,KAE7B,GADAlB,OAAOmB,SAASD,KAAO,GACnBA,EAAM,CACN,IACME,EADM,yBACMC,KAAKH,GACvB,IAAKE,GAA6B,qBAAbA,EAAM,GACvB,OAGJpB,OAAOC,aAAaqB,QAAQ,cAAeF,EAAM,IACjDjB,EAAS,CAACJ,YAAaqB,EAAM,QAIlC,CAACzB,EAAMtB,WAAY8B,IAEtBc,qBAAU,WACNM,MAAM5B,EAAMtB,WAAa,aAAc,CACnCmD,OAAQ,OACRC,KAAM5C,KAAK6C,UAAU,CAAC3B,YAAaJ,EAAMI,kBAE9C,CAACJ,EAAMI,YAAaJ,EAAMtB,aAEzBsB,EAAMI,YACN,OAAO,cAAC4B,EAAD,IAGX,IAAMC,EAAM,IAAIC,IAAI,yCAMpB,OALAD,EAAIE,aAAaC,IAAI,YAAapC,EAAME,gBACxC+B,EAAIE,aAAaC,IAAI,eAAgBpC,EAAMG,SAC3C8B,EAAIE,aAAaC,IAAI,gBAAiB,SACtCH,EAAIE,aAAaC,IAAI,QAAS,4BAEvB,cAAClB,EAAD,CAAgBmB,KAAMJ,EAAIK,WAA1B,mBAGX,I,EAAMC,EAAmBvF,IAAOC,IAAV,6JAWhBuF,EAAoBxF,IAAOmE,EAAV,oTAgBjBsB,EAAkBzF,IAAOC,IAAV,0TAgBrB,SAAS+E,IAAY,IACVhC,EAASqB,qBAAWZ,GAApBT,MADS,EAEkBc,mBAAS,aAF3B,mBAET4B,EAFS,KAEEC,EAFF,KAIVV,EAAM,IAAIC,IAAI,yCAMpB,OALAD,EAAIE,aAAaC,IAAI,YAAapC,EAAME,gBACxC+B,EAAIE,aAAaC,IAAI,eAAgBpC,EAAMG,SAC3C8B,EAAIE,aAAaC,IAAI,gBAAiB,SACtCH,EAAIE,aAAaC,IAAI,QAAS,4BAEvB,eAACG,EAAD,WACH,cAAC,IAAD,CAAMK,GAAG,IAAT,SACI,cAACH,EAAD,qBAIJ,cAAC,IAAD,CAAMG,GAAG,aAAT,SACI,cAACH,EAAD,0BAIJ,cAACD,EAAD,CAAmBH,KAAMJ,EAAIK,WAAYO,aAAc,kBAAMF,EAAa,gBAAgBG,aAAc,kBAAMH,EAAa,cAA3H,SACKD,OCjHb,I,EAAMK,EAAe/F,IAAOgG,KAAV,kCAIX,SAASC,IAAO,IACXjD,EAAUqB,qBAAWZ,GAArBT,MADU,EAE0Bc,mBAAS,GAFnC,mBAEX1D,EAFW,KAEK8F,EAFL,OAG0BpC,mBAAS,GAHnC,mBAGX3D,EAHW,KAGKgG,EAHL,OAIYrC,mBAAwB,IAJpC,mBAIXlD,EAJW,KAIFwF,EAJE,KAclB,OARA9B,qBAAU,WACN,IAAI7C,EAAauB,EAAMtB,YAAY,SAAC2E,GAChCH,EAAkBG,EAAQjG,gBAC1B+F,EAAkBE,EAAQlG,gBAC1BiG,EAAWC,EAAQzF,cAExB,CAACoC,EAAMtB,aAEH,cAACqE,EAAD,UACH,eAAC,IAAD,WACI,cAAC3B,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkC,KAAK,eAEZ,eAAC,IAAD,CAAOA,KAAK,IAAZ,UACI,cAACpG,EAAD,CAAMC,eAAgBA,EAAgBC,eAAgBA,IACtD,cAACO,EAAD,CAASC,QAASA,eClCtC,IAAM2F,EAAcC,YAAH,mtBA+BjBC,IAASC,OACL,cAAC,aAAD,UACI,cAAC,EAAD,UACI,eAAC,IAAMC,SAAP,WACI,cAACJ,EAAD,IACA,cAACN,EAAD,WAIZW,SAASC,eAAe,W","file":"static/js/main.cd458a5b.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst MetaContainer = styled.div`\n    display: inline-block;\n    background: var(--bg-bright);\n    border: 1px solid var(--bg-brighter);\n    padding: 0.5rem;\n    margin: 1rem;\n    margin-right: 0;\n    margin-bottom: 0;\n`;\n\nexport function Meta({ activeChannels, joinedChannels }: { [key: string]: number }) {\n    return <>\n        <MetaContainer>\n            Joined Channels: <strong>{joinedChannels}</strong>\n        </MetaContainer>\n        <MetaContainer>\n            Active Channels: <strong>{activeChannels}</strong>\n        </MetaContainer>\n    </>\n}","export function ProfilePicture({ src }: { src: string } = { src: \"https://static-cdn.jtvnw.net/user-default-pictures-uv/cdd517fe-def4-11e9-948e-784f43822e80-profile_image-70x70.png\" }) {\r\n    return <img src={src} width={\"30\"} height={\"30\"} alt=\"profile\" />;\r\n}","import styled from \"styled-components\";\nimport { ProfilePicture } from \"./ProfilePicture\";\nimport { Record } from \"../types/Events\";\n\nconst RecordsContainer = styled.div`\n    display: flex;\n`;\n\nexport function Records({ records }: { records: Array<Record> }) {\n    return <RecordsContainer>\n        {records.map(record => <RecordComponent key={record.title} record={record} />)}\n\n    </RecordsContainer>\n}\n\nconst RecordConatiner = styled.div`\n    background: var(--bg-bright);\n    border: 1px solid var(--bg-brighter);\n    margin: 1rem;\n    margin-right: 0;\n    padding: 1rem;\n\n    h2 {\n        color: var(--text);\n        margin: 0;\n        margin-bottom: 1rem;\n        padding: 0;\n    }\n\n    ol {\n        color: white;\n        font-size: 1.5rem;\n        font-weight: bold;\n        width: 500px;\n        padding: 0;\n        margin: 0;\n        margin-right: 15px;\n        background: var(--lightBackground);\n        border: 1px solid var(--lightBorder);\n        border-radius: 3px;\n\n        li {\n            display: flex;\n            align-items: center;\n            margin-bottom: 0.25rem;\n\n            img {\n                margin-right: 10px;\n            }\n\n            .value {\n                text-align: right;\n                flex: 1 1 auto;\n            }\n        }\n    }\n`;\n\nfunction RecordComponent({ record }: { record: Record }) {\n    return <RecordConatiner>\n        <h2>{record.title}</h2>\n        <ol>\n            {record.scores.map(score => <li key={score.user.id}>\n                <ProfilePicture src={score.user.profilePicture} />\n                <span>{score.user.displayName}</span>\n                <span className={\"value\"}>{score.score}</span>\n            </li>)}\n        </ol>\n    </RecordConatiner>\n}","import { EventMessage } from \"../types/Events\";\n\nexport default class EventService {\n    constructor(apiBaseUrl: string, callback: (data: EventMessage) => void) {\n\n        function connect() {\n            var ws = new WebSocket(`${apiBaseUrl.replace(\"https://\", \"wss://\").replace(\"http://\", \"ws://\")}/api/ws`);\n            \n            ws.onmessage = (event) => {\n                callback(JSON.parse(event.data));\n            };\n\n            ws.onclose = e => {\n                console.log('Socket is closed. Reconnect will be attempted in 1 second.', e.reason);\n                setTimeout(connect, 1000);\n            };\n\n            ws.onerror = err => {\n                console.error('Socket encountered error: ', err, 'Closing socket');\n                ws.close();\n            };\n        }\n\n        connect();\n    }\n}\n\n","import { createContext, useState } from \"react\";\n\nexport interface State {\n    apiBaseUrl: string,\n    twitchClientId: string,\n    baseUrl: string,\n    accessToken: string | null,\n}\n\nexport type Action = Record<string, unknown>;\n\nconst defaultContext = {\n    state: {\n        apiBaseUrl: process.env.REACT_APP_API_BASE_URL,\n        twitchClientId: process.env.REACT_APP_TWITCH_CLIENT_ID,\n        baseUrl: process.env.REACT_APP_BASE_URL,\n        accessToken: window.localStorage.getItem(\"accessToken\")\n    } as State,\n    setState: (state: Partial<State>) => { },\n};\n\nconst store = createContext(defaultContext);\nconst { Provider } = store;\n\nconst StateProvider = ({ children }: { children: JSX.Element }): JSX.Element => {\n    const [state, setStateDefault] = useState({ ...defaultContext.state });\n\n    // @ts-ignore i don't know why partial isn't accepted here :/\n    const setState = (partialState: Partial<State>) => setStateDefault({...state, partialState});\n\n    return <Provider value={{ state, setState }}>{children}</Provider>;\n};\n\nexport { store, StateProvider };\n","import { useContext, useEffect, useState } from \"react\";\nimport { store } from \"./../store\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst LoginContainer = styled.a`\n    position: absolute;\n    display: block;\n    color: white;\n    top: 1rem;\n    right: 1rem;\n    padding: 1rem 2rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--twitch);\n\n    &:hover {\n        background: var(--twitch-dark);\n    }\n`;\n\nexport function Login() {\n    const {state, setState} = useContext(store);\n\n    useEffect(() => {\n        const hash = window.location.hash;\n        window.location.hash = \"\";\n        if (hash) {\n            const reg = /#access_token=(\\w*)&/ig;\n            const match = reg.exec(hash);\n            if (!match || typeof match[1] === \"undefined\") {\n                return;\n            }\n\n            window.localStorage.setItem(\"accessToken\", match[1]);\n            setState({accessToken: match[1]});\n\n            \n        }\n    }, [state.apiBaseUrl, setState]);\n\n    useEffect(() => {\n        fetch(state.apiBaseUrl + \"/api/oauth\", {\n            method: 'post',\n            body: JSON.stringify({accessToken: state.accessToken})\n        })\n    }, [state.accessToken, state.apiBaseUrl]);\n\n    if (state.accessToken) {\n        return <LoggedIn />;\n    }\n\n    const url = new URL(\"https://id.twitch.tv/oauth2/authorize\")\n    url.searchParams.set(\"client_id\", state.twitchClientId);\n    url.searchParams.set(\"redirect_uri\", state.baseUrl);\n    url.searchParams.set(\"response_type\", \"token\");\n    url.searchParams.set(\"scope\", \"channel:read:redemptions\");\n\n    return <LoginContainer href={url.toString()}>Login</LoginContainer>;\n}\n\nconst ButtonsContainer = styled.div`\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    display: flex;\n\n    a {\n        text-decoration: none;\n    }\n`;\n\nconst LoggedInContainer = styled.a`\n    display: block;\n    color: white;\n    width: 150px;\n    padding: 1rem 2rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--twitch);\n    cursor: pointer;\n\n    &:hover {\n        background: var(--twitch-dark);\n    }\n`;\n\nconst DashboardButton = styled.div`\n    display: block;\n    color: white;\n    margin-right: 1rem;\n    padding: 1rem 2rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--theme2);\n    cursor: pointer;\n\n    &:hover {\n        background: var(--theme2-dark);\n    }\n`;\n\nfunction LoggedIn() {\n    const {state} = useContext(store);\n    const [loginText, setLoginText] = useState(\"Logged In\");\n\n    const url = new URL(\"https://id.twitch.tv/oauth2/authorize\")\n    url.searchParams.set(\"client_id\", state.twitchClientId);\n    url.searchParams.set(\"redirect_uri\", state.baseUrl);\n    url.searchParams.set(\"response_type\", \"token\");\n    url.searchParams.set(\"scope\", \"channel:read:redemptions\");\n\n    return <ButtonsContainer>\n        <Link to=\"/\">\n            <DashboardButton>\n                Home\n            </DashboardButton>\n        </Link>\n        <Link to=\"/dashboard\">\n            <DashboardButton>\n                Dashboard\n            </DashboardButton>\n        </Link>\n        <LoggedInContainer href={url.toString()} onMouseEnter={() => setLoginText(\"force login\")} onMouseLeave={() => setLoginText(\"Logged In\")}>\n            {loginText}\n        </LoggedInContainer>\n    </ButtonsContainer>;\n}","import { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Meta } from \"./components/Meta\";\nimport { Records } from \"./components/Records\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport EventService from \"./service/EventService\";\nimport { store } from \"./store\";\nimport { EventMessage, Record } from \"./types/Events\";\nimport { Login } from \"./components/Login\";\n\nconst AppContainer = styled.main`\n    \n`\n\nexport function App() {\n    const { state } = useContext(store);\n    const [joinedChannels, setJoinedChannels] = useState(0);\n    const [activeChannels, setActiveChannels] = useState(0);\n    const [records, setRecords] = useState<Array<Record>>([]);\n\n    useEffect(() => {\n        new EventService(state.apiBaseUrl, (message: EventMessage) => {\n            setJoinedChannels(message.joinedChannels);\n            setActiveChannels(message.activeChannels);\n            setRecords(message.records);\n        });\n    }, [state.apiBaseUrl]);\n\n    return <AppContainer>\n        <Router>\n            <Login />\n            <Switch>\n                <Route path=\"/dashboard\">\n                </Route>\n                <Route path=\"/\">\n                    <Meta activeChannels={activeChannels} joinedChannels={joinedChannels} />\n                    <Records records={records} />\n                </Route>\n            </Switch>\n        </Router>\n\n    </AppContainer>\n}","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { App } from './App';\nimport { StateProvider } from './store';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        --bg: #0e0e10;\n        --bg-bright: #18181b;\n        --bg-brighter: #3d4146;\n        --bg-dark: #121416;\n        --theme: #00CC66;\n        --theme-bright: #00FF80;\n        --theme2: #2980b9;\n        --theme2-bright: #3498db;\n        --theme2-dark: #24618a;\n        --text: #F5F5F5;\n        --text-dark: #616161;\n        --twitch: #6441a5;\n        --twitch-dark: #4c317e;\n\n        background: var(--bg);\n        margin: 0;\n        padding: 0;\n        color: var(--text);\n        margin: 0;\n        font-family: Helvetica, Arial, sans-serif;\n        height: 100%;\n        width: 100%;\n\n        * {\n            box-sizing: border-box;\n        }\n    }\n`\n\nReactDOM.render(\n    <StrictMode>\n        <StateProvider>\n            <React.Fragment>\n                <GlobalStyle />\n                <App />\n            </React.Fragment>\n        </StateProvider>\n    </StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}