{"version":3,"sources":["service/cookie.ts","store.tsx","service/doFetch.ts","components/Managing.tsx","components/Reset.tsx","components/Menu.tsx","components/Rewards.tsx","components/Dashboard.tsx","hooks/useUserConfig.ts","hooks/useRewards.ts","components/Login.tsx","components/Meta.tsx","components/ProfilePicture.tsx","components/Records.tsx","service/EventService.ts","App.tsx","index.tsx"],"names":["deleteCookie","name","value","days","d","Date","setTime","getTime","document","cookie","toUTCString","setCookie","Method","store","PStore","twitchClientId","process","apiBaseUrl","baseUrl","scToken","v","match","getCookie","managing","doFetch","method","path","a","body","undefined","getRawState","headers","Authorization","config","JSON","stringify","window","fetch","then","response","status","location","assign","ok","json","text","errorMessage","Promise","reject","Error","ManagingContainer","styled","div","Managing","userConfig","Protected","EditorFor","length","useState","s","onChange","e","update","target","defaultValue","map","editorFor","ResetContainer","Reset","setUserConfig","onClick","confirm","MenuContainer","Menu","EditorManager","EditorManagerContainer","loadedEditors","Editors","editor","Object","values","editors","setEditors","changeEditor","id","newEditors","editorInputs","entries","sort","key","push","EditorInput","creatingNewEditor","filter","className","setValue","ref","useRef","type","onKeyDown","keyCode","current","blur","handleKeyPress","onBlur","RewardsContainer","RewardContainer","Rewards","rewards","reward","src","image","url_2x","default_image","alt","title","prompt","Dashboard","classNames","setClassNames","onSave","onError","changeCounter","setChangeCounter","fetchConfig","endPoint","GET","catch","useEffect","useDebounce","POST","DELETE","useUserConfig","newClassNames","slice","setTimeout","userCfg","setRewards","data","useRewards","DashboardContainer","join","checked","Redemptions","Bttv","Active","newConfig","parse","Title","spellCheck","LoginContainer","Login","LoggedIn","href","createOAuthUrl","toString","ButtonsContainer","LoggedInContainer","DashboardButton","loginText","setLoginText","to","onMouseEnter","onMouseLeave","url","URL","searchParams","set","MetaContainer","Meta","activeChannels","joinedChannels","ProfilePicture","width","height","RecordsContainer","Records","records","record","RecordComponent","RecordConatiner","scores","score","user","profilePicture","displayName","EventService","callback","connect","ws","WebSocket","replace","onmessage","event","onclose","console","log","reason","onerror","err","error","close","AppContainer","main","App","setJoinedChannels","setActiveChannels","setRecords","message","GlobalStyle","createGlobalStyle","ReactDOM","render","Fragment","getElementById"],"mappings":"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","file":"static/js/main.38deaba9.chunk.js","sourcesContent":["export function getCookie(name: string): string | null {\n    const v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\n    return v ? v[2] : null;\n}\n\nexport function setCookie(name: string, value: string, days: number) {\n    const d = new Date();\n    d.setTime(d.getTime() + 24 * 60 * 60 * 1000 * days);\n    document.cookie = name + \"=\" + value + \";path=/;expires=\" + d.toUTCString();\n}\n\nexport function deleteCookie(name: string) {\n    setCookie(name, '', -1);\n}\n","import { Store as PStore } from \"pullstate\";\nimport { getCookie } from \"./service/cookie\";\n\nexport interface Store {\n    twitchClientId: string,\n    baseUrl: string,\n    apiBaseUrl: string,\n    scToken: string | null,\n    managing: string,\n}\n\nexport const store = new PStore<Store>({\n    twitchClientId: process.env.REACT_APP_TWITCH_CLIENT_ID ?? \"\",\n    apiBaseUrl: process.env.REACT_APP_API_BASE_URL ?? \"\",\n    baseUrl: process.env.REACT_APP_BASE_URL ?? \"\",\n    scToken: getCookie(\"scToken\"),\n    managing: \"\",\n});","import { store } from \"../store\";\nimport { deleteCookie } from \"./cookie\";\n\nexport enum Method {\n    GET = \"GET\",\n    POST = \"POST\",\n    DELETE = \"POST\"\n}\n\nexport async function doFetch(method: Method, path: string, body: any = undefined) {\n    const {apiBaseUrl, scToken} = store.getRawState();\n\n    const headers: Record<string, string> = { 'content-type': 'application/json' }\n    if (scToken) {\n        headers.Authorization = `Bearer ${scToken}`\n    }\n\n    const config: RequestInit = {\n        method: method,\n        headers: {\n            ...headers,\n        },\n    }\n\n    if (body) {\n        config.body = JSON.stringify(body)\n    }\n\n    return window.fetch(`${apiBaseUrl}${path}`, config)\n        .then(async response => {\n            if (response.status === 401) {\n                deleteCookie(\"scToken\");\n                window.location.assign(\"/\")\n                return\n            }\n            if (response.ok) {\n                return await response.json()\n            } else {\n                const errorMessage = await response.text()\n                return Promise.reject(new Error(errorMessage))\n            }\n        })\n}","import styled from \"styled-components\";\nimport { UserConfig } from \"../hooks/useUserConfig\";\nimport { store } from \"../store\";\n\nconst ManagingContainer = styled.div`\n    position: relative;\n\n    select {\n        -moz-appearance: none;\n        -webkit-appearance: none;\n        appearance: none;\n        background: var(--bg-bright);\n        border: 1px solid var(--bg-brighter);\n        color: white;\n        outline: none;\n        padding: 1rem;\n        padding-right: 1.5rem;\n        font-size: 0.8rem;\n        line-height: 1.1rem;\n        position: relative;\n        height: 50px;\n    }\n\n    &:after {\n        content: \"▼\";\n        color: white;\n        pointer-events: none;\n        position: absolute;\n        right: 10px;\n        top: 20px;\n        margin: auto;\n    }\n`;\n\nexport function Managing({ userConfig }: { userConfig: UserConfig | null | undefined }) {\n    if (userConfig?.Protected.EditorFor.length === 0) {\n        return null;\n    }\n    const managing = store.useState(s => s.managing);    \n\n    return <ManagingContainer>\n        <select onChange={e => store.update(s => {s.managing = e.target.value})} value={managing} defaultValue={\"\"}>\n            {userConfig?.Protected.EditorFor.map(editorFor => <option key={editorFor} value={editorFor}>{editorFor}</option>)}\n            <option value=\"\">you</option>\n        </select>\n    </ManagingContainer>\n}","import styled from \"styled-components\";\nimport { UserConfig } from \"../hooks/useUserConfig\";\nimport { store } from \"../store\";\n\n\nconst ResetContainer = styled.div`\n    display: block;\n    color: white;\n    padding: 1rem 1rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--danger-dark);\n    cursor: pointer;\n    opacity: 0.25;\n    transition: opacity 0.2s ease-in-out;\n\n    &:hover {\n        background: var(--danger);\n        opacity: 1;\n    }\n`;\n\nexport function Reset({ setUserConfig }: { setUserConfig: (userConfig: UserConfig | null) => void }) {\n    const managing = store.useState(s => s.managing);\n    if (managing !== \"\") {\n        return null;\n    }\n\n    return <ResetContainer onClick={() => {\n        if (window.confirm(`Do you really want to reset?\\n- Channel Point Rewards on Twitch from spamchamp\\n- Settings on spamchamp.gempir.com\\n- Unsubscribes all webhooks for your channel`)) {\n            setUserConfig(null);\n        }\n    }}>Reset</ResetContainer>;\n}","import React, { KeyboardEvent, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { SetUserConfig, UserConfig } from \"../hooks/useUserConfig\";\nimport { store } from \"../store\";\nimport { Managing } from \"./Managing\";\nimport { Reset } from \"./Reset\";\n\nconst MenuContainer = styled.div`\n    display: inline-grid;\n    grid-auto-flow: column;\n    position: absolute;\n    top: 1rem;\n    left: 1rem;\n    border-radius: 3px;\n    cursor: pointer;\n    grid-gap: 0.5rem;\n`;\n\nexport function Menu({ userConfig, setUserConfig }: { userConfig: UserConfig | null | undefined, setUserConfig: SetUserConfig }) {\n    return <MenuContainer>\n        <Managing userConfig={userConfig} />\n        <Reset setUserConfig={setUserConfig} />\n        <EditorManager setUserConfig={setUserConfig} userConfig={userConfig} />\n    </MenuContainer>\n}\n\nconst EditorManagerContainer = styled.div`\n    display: inline-grid;\n    grid-auto-flow: column;\n    grid-gap: 0.5rem;\n\n    .editor-input {\n        background: var(--bg-bright);\n        border: 1px solid var(--bg-brighter);\n        color: white;\n        outline: none;\n        padding-right: 0.5rem;\n        font-size: 0.8rem;\n        line-height: 1.2rem;\n        position: relative;\n        height: 50px;\n\n        input {\n            outline: none;\n            max-width: 6rem;\n            padding: 1rem;\n            padding-right: 0;\n            background: transparent;\n            border: 0;\n            color: white;\n        }\n\n        span {\n            padding: 0.5rem;\n            font-weight: bold;\n            user-select: none;\n\n            &:hover {\n                color: var(--danger);\n            }\n        }\n    }\n\n    .add-editor {\n        height: 50px;\n        padding: 1rem;\n        font-size: 0.8rem;\n        background: var(--theme-bright);\n        border-radius: 3px;\n        opacity: 1;\n        font-weight: bold;\n        line-height: 1.2rem;\n        transition: opacity 0.2s ease-in-out;\n        user-select: none;\n\n        &:hover {\n            opacity: 1;\n        }\n    }\n`;\n\nfunction EditorManager({ setUserConfig, userConfig }: { setUserConfig: SetUserConfig, userConfig: UserConfig | null | undefined }) {\n    const managing = store.useState(s => s.managing);\n    \n    const loadedEditors: Record<string, string> = {};\n    userConfig?.Editors.map(editor => {\n        loadedEditors[\"e\" + (Object.values(loadedEditors).length + 1)] = editor\n        return editor;\n    });\n\n    const [editors, setEditors] = useState<Record<string, string>>(loadedEditors);\n\n    const changeEditor = (id: string, value: string | null) => {\n        const newEditors = { ...editors };\n\n        if (value === null) {\n            delete newEditors[id];\n            setEditors(newEditors);\n        } else {\n            newEditors[id] = value;\n            setEditors(newEditors);\n        }\n\n        // @ts-ignore\n        setUserConfig({ ...userConfig, Editors: Object.values(newEditors) })\n    };\n\n    const editorInputs = [];\n    for (const [key, value] of Object.entries(editors).sort()) {\n        editorInputs.push(<EditorInput key={key} editor={value} id={key} onChange={changeEditor} />);\n    }\n\n    const creatingNewEditor = Object.values(editors).filter(editor => editor.length === 0).length === 0;\n\n    if (managing !== \"\") {\n        return null;\n    }\n\n    return <EditorManagerContainer>\n        {editorInputs}\n        {creatingNewEditor && <div className=\"add-editor\" onClick={() => {\n            const newEditors = { ...editors };\n            newEditors[\"e\" + (Object.values(editors).length + 1)] = \"\";\n            setEditors(newEditors);\n        }}>add editor</div>}\n    </EditorManagerContainer>\n}\n\nfunction EditorInput({ id, editor, onChange }: { id: string, editor: string, onChange: (id: string, value: string | null) => void }) {\n    const [value, setValue] = useState(editor);\n    const ref = useRef<HTMLInputElement>(null);\n\n    const handleKeyPress = (e: KeyboardEvent) => {\n        if (e.keyCode === 13) {\n            if (ref.current !== null) {\n                ref.current.blur();\n            }\n        }\n    };\n\n    return <div className=\"editor-input\">\n        <input ref={ref} type=\"text\" value={value} onKeyDown={(e) => handleKeyPress(e)} onChange={(e) => setValue(e.target.value)} onBlur={() => onChange(id, value)} key={editor} />\n        <span onClick={() => onChange(id, null)}>X</span>\n    </div>;\n}","import styled from \"styled-components\";\nimport { Reward as RewardInterface } from \"../hooks/useRewards\";\n\nconst RewardsContainer = styled.div`\n    display: grid;\n    grid-gap: 1rem;\n`;\n\nconst RewardContainer = styled.div`\n    background: var(--bg-bright);\n    border: 1px solid var(--bg-brighter);\n    padding: 0.5rem;\n\n    .container {\n        display: grid;\n        grid-template-columns: 56px 1fr;\n        grid-gap: 1rem;\n    }\n`;\n\nexport function Rewards({ rewards }: { rewards: Array<RewardInterface> }) {\n    return <RewardsContainer>\n        {rewards.map(reward => <RewardContainer key={reward.id}>\n            <div className=\"container\">\n                <img src={reward.image?.url_2x ?? reward.default_image.url_2x} alt={reward.title} />\n                <div>\n                    <h5>{reward.title}</h5>\n                    <p>{reward.prompt}</p>\n                </div>\n            </div>\n        </RewardContainer>)}\n    </RewardsContainer>\n\n}","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useRewards } from \"../hooks/useRewards\";\nimport { useUserConfig } from \"../hooks/useUserConfig\";\nimport { Menu } from \"./Menu\";\nimport { Rewards } from \"./Rewards\";\n\nexport function Dashboard() {\n    const [classNames, setClassNames] = useState([\"userConfig\"]);\n\n    const [userCfg, setUserConfig] = useUserConfig(() => {\n        const newClassNames = classNames.slice();\n        newClassNames.push(\"saved\");\n        setClassNames(newClassNames)\n\n        setTimeout(() => {\n            setClassNames([\"userConfig\"]);\n        }, 500);\n    }, () => {\n        const newClassNames = classNames.slice();\n        newClassNames.push(\"error\");\n        setClassNames(newClassNames)\n\n        setTimeout(() => {\n            setClassNames([\"userConfig\"]);\n        }, 500);\n    });\n\n    const [rewards] = useRewards();\n\n    return <DashboardContainer>\n        {userCfg && <Menu userConfig={userCfg} setUserConfig={setUserConfig} />}\n        {<div className={classNames.join(\" \")}>\n            {userCfg && <div className={\"redemption\"}>\n                <img src=\"/images/bttv.png\" alt={\"bttv\"} />\n                <label className=\"switch\">\n                    <input type=\"checkbox\" checked={userCfg.Redemptions.Bttv.Active} onChange={(e) => {\n                        const newConfig = JSON.parse(JSON.stringify(userCfg));\n                        newConfig.Redemptions.Bttv.Active = e.target.checked;\n\n                        setUserConfig(newConfig);\n                    }} />\n                    <span className=\"slider round\"></span>\n                </label>\n                <div className=\"redemption-title\">\n                    <span>Channel Points Reward Name</span>\n                    <input type=\"text\" value={userCfg.Redemptions.Bttv.Title} spellCheck={false} onChange={(e) => {\n                        const newConfig = JSON.parse(JSON.stringify(userCfg));\n                        newConfig.Redemptions.Bttv.Title = e.target.value;\n\n                        setUserConfig(newConfig);\n                    }} />\n                </div>\n                <span className=\"hint\">\n                    make sure <strong>gempbot</strong> is bttv editor\n                </span>\n            </div>}\n        </div>}\n        <Rewards rewards={rewards} />\n    </DashboardContainer>\n}\n\nconst DashboardContainer = styled.div`\n    margin-top: 5rem;\n    margin-left: 1rem;\n    margin-right: 1rem;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 2rem;\n\n    .userConfig {\n        padding-bottom: 2rem;\n        background: var(--bg);\n        transition: background-color ease-in-out 0.2s;\n\n        &.saved {\n            background: var(--theme);\n        }\n\n        &.error {\n            background: var(--danger);\n        }\n    }\n\n    .redemption {\n        display: flex;\n        align-items: center;\n        background: var(--bg-bright);\n        border: 1px solid var(--bg-brighter);\n        padding: 0.5rem;\n\n        img {\n            max-height: 3rem;\n            margin-left: 1rem;\n            margin-right: 2rem;\n        }\n\n        .redemption-title {\n            position: relative;\n\n            span {\n                position: absolute;\n                top: -13px;\n                left: 18px;\n                font-size: 11px;\n            }\n\n            input {\n                margin: 0;\n                padding: 0;\n                margin-left: 1rem;\n                font-size: 1rem;\n                background: var(--bg);\n                border: 1px solid var(--bg-bright);\n                padding: 5px;\n                color: white;\n\n                &:focus {\n                    outline: none;\n                    border: 1px solid var(--theme2);\n                }\n            }\n        }\n        \n        .hint {\n            margin-left: 1rem;\n\n            strong {\n                color: var(--theme-bright);\n            }\n        }\n    }\n\n    /* The switch - the box around the slider */\n    .switch {\n        position: relative;\n        display: inline-block;\n        width: 60px;\n        height: 34px;\n\n        input {\n            opacity: 0;\n            width: 0;\n            height: 0;\n        }\n    }\n    /* The slider */\n    .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ccc;\n        -webkit-transition: .4s;\n        transition: .4s;\n\n        &:before {\n            position: absolute;\n            content: \"\";\n            height: 26px;\n            width: 26px;\n            left: 4px;\n            bottom: 4px;\n            background-color: white;\n            -webkit-transition: .4s;\n            transition: .4s;\n        }\n    }\n\n    input:checked + .slider {\n        background-color: var(--theme-bright);\n    }\n\n    input:focus + .slider {\n     box-shadow: 0 0 1px var(--theme-bright);\n    }\n\n    input:checked + .slider:before {\n        -webkit-transform: translateX(26px);\n        -ms-transform: translateX(26px);\n        transform: translateX(26px);\n    }\n\n    .slider.round {\n        border-radius: 34px;\n\n        &:before {\n            border-radius: 50%;\n        }\n    }\n`;","import { useEffect, useState } from \"react\";\nimport { useDebounce } from \"react-use\";\nimport { doFetch, Method } from \"../service/doFetch\";\nimport { store } from \"../store\";\n\nexport interface UserConfig {\n    Redemptions: Redemptions;\n    Editors: Array<string>;\n    Protected: Protected;\n}\n\nexport interface Protected {\n    EditorFor: Array<string>;\n}\n\nexport interface Redemptions {\n    Bttv: Redemption;\n}\n\nexport interface Redemption {\n    Title: string;\n    Active: boolean;\n}\n\nexport type SetUserConfig = (userConfig: UserConfig | null) => void;\n\nexport function useUserConfig(onSave: () => void = () => {}, onError: () => void = () => {}): [UserConfig | null | undefined, SetUserConfig] {\n    const [userConfig, setUserConfig] = useState<UserConfig | null | undefined>(undefined);\n    const [changeCounter, setChangeCounter] = useState(0);\n    const managing = store.useState(s => s.managing);\n\n    const fetchConfig = () => {\n        let endPoint = \"/api/userConfig\";\n        if (managing) {\n            endPoint += `?managing=${managing}`;\n        }\n        doFetch(Method.GET, endPoint).then((userConfig) => setUserConfig(userConfig)).catch(onError)\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(fetchConfig, [managing]);\n\n    useDebounce(() => {\n        if (changeCounter && userConfig) {\n            let endPoint = \"/api/userConfig\";\n            if (managing) {\n                endPoint += `?managing=${managing}`;\n            }\n            doFetch(Method.POST, endPoint, userConfig).then(onSave).catch(onError);\n        } else if (changeCounter && userConfig === null) {\n            doFetch(Method.DELETE, \"/api/userConfig\").then(fetchConfig).catch(onError);\n        }\n    }, 500, [changeCounter]);\n\n    const setCfg = (config: UserConfig | null) => {\n        setUserConfig(config);\n        setChangeCounter(changeCounter + 1);\n    };\n\n    return [userConfig, setCfg]\n}","import { useEffect, useState } from \"react\";\nimport { doFetch, Method } from \"../service/doFetch\";\nimport { store } from \"../store\";\n\nexport interface Reward {\n    broadcaster_name: string;\n    broadcaster_login: string;\n    broadcaster_id: string;\n    id: string;\n    image: Image | null;\n    background_color: string;\n    is_enabled: boolean;\n    cost: number;\n    title: string;\n    prompt: string;\n    is_user_input_required: boolean;\n    max_per_stream_setting: MaxPerStreamSetting;\n    max_per_user_per_stream_setting: MaxPerUserPerStreamSetting;\n    global_cooldown_setting: GlobalCooldownSetting;\n    is_paused: boolean;\n    is_in_stock: boolean;\n    default_image: Image;\n    should_redemptions_skip_request_queue: boolean;\n    redemptions_redeemed_current_stream: null;\n    cooldown_expires_at: null;\n}\n\nexport interface Image {\n    url_1x: string;\n    url_2x: string;\n    url_4x: string;\n}\n\nexport interface GlobalCooldownSetting {\n    is_enabled: boolean;\n    global_cooldown_seconds: number;\n}\n\nexport interface MaxPerStreamSetting {\n    is_enabled: boolean;\n    max_per_stream: number;\n}\n\nexport interface MaxPerUserPerStreamSetting {\n    is_enabled: boolean;\n    max_per_user_per_stream: number;\n}\n\nexport function useRewards() {\n    const [rewards, setRewards] = useState<Array<Reward>>([]);\n    const managing = store.useState(s => s.managing);\n\n    const fetchRewards = () => {\n        let endPoint = \"/api/rewards\";\n        if (managing) {\n            endPoint += `?managing=${managing}`;\n        }\n        doFetch(Method.GET, endPoint).then(response => setRewards(response.data ?? []));\n    };\n\n    useEffect(fetchRewards, [managing]);\n\n    return [rewards];\n}\n\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { store } from \"./../store\";\n\nconst LoginContainer = styled.a`\n    position: absolute;\n    display: block;\n    color: white;\n    top: 1rem;\n    right: 1rem;\n    padding: 1rem 2rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--twitch);\n\n    &:hover {\n        background: var(--twitch-dark);\n    }\n`;\n\nexport function Login() {\n    const scToken = store.useState(s => s.scToken);\n\n    if (scToken) {\n        return <LoggedIn />;\n    }\n\n    return <LoginContainer href={createOAuthUrl().toString()}>Login</LoginContainer>;\n}\n\nconst ButtonsContainer = styled.div`\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    display: flex;\n\n    a {\n        text-decoration: none;\n    }\n`;\n\nconst LoggedInContainer = styled.a`\n    display: block;\n    color: white;\n    width: 150px;\n    padding: 1rem 2rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--twitch);\n    cursor: pointer;\n\n    &:hover {\n        background: var(--twitch-dark);\n    }\n`;\n\nconst DashboardButton = styled.div`\n    display: block;\n    color: white;\n    margin-right: 1rem;\n    padding: 1rem 2rem;\n    text-decoration: none;\n    font-weight: bold;\n    border-radius: 3px;\n    background: var(--theme2-dark);\n    cursor: pointer;\n\n    &.dashboard {\n        background: var(--theme);\n\n        &:hover {\n        background: var(--theme-bright);\n    }\n    }\n\n    &:hover {\n        background: var(--theme2);\n    }\n`;\n\nfunction LoggedIn() {\n    const [loginText, setLoginText] = useState(\"Logged In\");\n\n    return <ButtonsContainer>\n        <Link to=\"/\">\n            <DashboardButton>\n                Home\n            </DashboardButton>\n        </Link>\n        <Link to=\"/dashboard\">\n            <DashboardButton className=\"dashboard\">\n                Dashboard\n            </DashboardButton>\n        </Link>\n        <LoggedInContainer href={createOAuthUrl().toString()} onMouseEnter={() => setLoginText(\"force login\")} onMouseLeave={() => setLoginText(\"Logged In\")}>\n            {loginText}\n        </LoggedInContainer>\n    </ButtonsContainer>;\n}\n\nfunction createOAuthUrl(): URL {\n    const { apiBaseUrl, twitchClientId } = store.getRawState();\n\n    const url = new URL(\"https://id.twitch.tv/oauth2/authorize\")\n    url.searchParams.set(\"client_id\", twitchClientId);\n    url.searchParams.set(\"redirect_uri\", apiBaseUrl + \"/api/callback\");\n    url.searchParams.set(\"response_type\", \"code\");\n    url.searchParams.set(\"claims\", JSON.stringify({ \"userinfo\": { \"picture\": null, \"preferred_username\": null, } }));\n    url.searchParams.set(\"scope\", \"channel:read:redemptions channel:manage:redemptions\");\n\n    return url;\n}","import styled from \"styled-components\";\n\nconst MetaContainer = styled.div`\n    display: inline-block;\n    background: var(--bg-bright);\n    border: 1px solid var(--bg-brighter);\n    padding: 0.5rem;\n    margin: 1rem;\n    margin-right: 0;\n    margin-bottom: 0;\n`;\n\nexport function Meta({ activeChannels, joinedChannels }: { [key: string]: number }) {\n    return <>\n        <MetaContainer>\n            Joined Channels: <strong>{joinedChannels}</strong>\n        </MetaContainer>\n        <MetaContainer>\n            Active Channels: <strong>{activeChannels}</strong>\n        </MetaContainer>\n    </>\n}","export function ProfilePicture({ src }: { src: string } = { src: \"https://static-cdn.jtvnw.net/user-default-pictures-uv/cdd517fe-def4-11e9-948e-784f43822e80-profile_image-70x70.png\" }) {\r\n    return <img src={src} width={\"30\"} height={\"30\"} alt=\"profile\" />;\r\n}","import styled from \"styled-components\";\nimport { ProfilePicture } from \"./ProfilePicture\";\nimport { Record } from \"../types/Events\";\n\nconst RecordsContainer = styled.div`\n    display: flex;\n`;\n\nexport function Records({ records }: { records: Array<Record> }) {\n    return <RecordsContainer>\n        {records.map(record => <RecordComponent key={record.title} record={record} />)}\n\n    </RecordsContainer>\n}\n\nconst RecordConatiner = styled.div`\n    background: var(--bg-bright);\n    border: 1px solid var(--bg-brighter);\n    margin: 1rem;\n    margin-right: 0;\n    padding: 1rem;\n\n    h2 {\n        color: var(--text);\n        margin: 0;\n        margin-bottom: 1rem;\n        padding: 0;\n    }\n\n    ol {\n        color: white;\n        font-size: 1.5rem;\n        font-weight: bold;\n        width: 500px;\n        padding: 0;\n        margin: 0;\n        margin-right: 15px;\n        background: var(--lightBackground);\n        border: 1px solid var(--lightBorder);\n        border-radius: 3px;\n\n        li {\n            display: flex;\n            align-items: center;\n            margin-bottom: 0.25rem;\n\n            img {\n                margin-right: 10px;\n            }\n\n            .value {\n                text-align: right;\n                flex: 1 1 auto;\n            }\n        }\n    }\n`;\n\nfunction RecordComponent({ record }: { record: Record }) {\n    return <RecordConatiner>\n        <h2>{record.title}</h2>\n        <ol>\n            {record.scores.map(score => <li key={score.user.id}>\n                <ProfilePicture src={score.user.profilePicture} />\n                <span>{score.user.displayName}</span>\n                <span className={\"value\"}>{score.score}</span>\n            </li>)}\n        </ol>\n    </RecordConatiner>\n}","import { store } from \"../store\";\nimport { EventMessage } from \"../types/Events\";\n\nexport default class EventService {\n    constructor(callback: (data: EventMessage) => void) {\n        const apiBaseUrl = store.getRawState().apiBaseUrl\n\n        function connect() {\n            var ws = new WebSocket(`${apiBaseUrl.replace(\"https://\", \"wss://\").replace(\"http://\", \"ws://\")}/api/ws`);\n\n            ws.onmessage = (event) => {\n                callback(JSON.parse(event.data));\n            };\n\n            ws.onclose = e => {\n                console.log('Socket is closed. Reconnect will be attempted in 1 second.', e.reason);\n                setTimeout(connect, 1000);\n            };\n\n            ws.onerror = err => {\n                console.error('Socket encountered error: ', err, 'Closing socket');\n                ws.close();\n            };\n        }\n\n        connect();\n    }\n}\n\n","import { useEffect, useState } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route, Switch\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Login } from \"./components/Login\";\nimport { Meta } from \"./components/Meta\";\nimport { Records } from \"./components/Records\";\nimport EventService from \"./service/EventService\";\nimport { EventMessage, Record } from \"./types/Events\";\n\nconst AppContainer = styled.main``;\n\nexport function App() {\n    const [joinedChannels, setJoinedChannels] = useState(0);\n    const [activeChannels, setActiveChannels] = useState(0);\n    const [records, setRecords] = useState<Array<Record>>([])\n\n    useEffect(() => {\n        new EventService((message: EventMessage) => {\n            setJoinedChannels(message.joinedChannels);\n            setActiveChannels(message.activeChannels);\n            setRecords(message.records);\n        });\n    }, []);\n\n    return <AppContainer>\n        <Router>\n            <Login />\n            <Switch>\n                <Route path=\"/dashboard\">\n                    <Dashboard />\n                </Route>\n                <Route path=\"/\">\n                    <Meta activeChannels={activeChannels} joinedChannels={joinedChannels} />\n                    <Records records={records} />\n                </Route>\n            </Switch>\n        </Router>\n    </AppContainer>\n}","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { App } from './App';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        --bg: #0e0e10;\n        --bg-bright: #18181b;\n        --bg-brighter: #3d4146;\n        --bg-dark: #121416;\n        --theme: #009148;\n        --theme-bright: #00a552;\n        --theme2: #2980b9;\n        --theme2-bright: #3498db;\n        --theme2-dark: #24618a;\n        --text: #F5F5F5;\n        --text-dark: #616161;\n        --twitch: #6441a5;\n        --twitch-dark: #4c317e;\n        --danger: #e74c3c;\n        --danger-dark: #c0392b;\n\n        background: var(--bg);\n        margin: 0;\n        padding: 0;\n        color: var(--text);\n        margin: 0;\n        font-family: Helvetica, Arial, sans-serif;\n        height: 100%;\n        width: 100%;\n\n        * {\n            box-sizing: border-box;\n        }\n    }\n`\n\nReactDOM.render(\n    <StrictMode>\n        <React.Fragment>\n            <GlobalStyle />\n            <App />\n        </React.Fragment>\n    </StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}