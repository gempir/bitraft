{"version":3,"sources":["factory/createLoginUrl.ts","service/cookie.ts","store.tsx","components/Navbar.tsx","service/doFetch.ts","components/Dashboard/Managing.tsx","components/Dashboard/Menu.tsx","components/Dashboard/RewardForms/BttvForm.tsx","components/Routes/Dashboard.tsx","hooks/useUserConfig.ts","components/Home/Teaser.tsx","components/Routes/Home.tsx","App.tsx","index.tsx"],"names":["createLoginUrl","apiBaseUrl","twitchClientId","url","URL","searchParams","set","deleteCookie","name","value","days","d","Date","setTime","getTime","document","cookie","toUTCString","setCookie","store","PStore","process","baseUrl","scToken","v","match","getCookie","managing","Navbar","useState","s","buttons","Login","className","LoggedIn","to","getRawState","href","toString","Method","doFetch","method","path","a","body","undefined","headers","Authorization","config","JSON","stringify","window","fetch","then","response","status","location","assign","ok","json","text","errorMessage","Promise","reject","Error","Managing","userConfig","Protected","EditorFor","length","onChange","e","update","target","map","editorFor","Menu","setUserConfig","EditorManager","loadedEditors","Editors","editor","Object","values","editors","setEditors","changeEditor","id","newEditors","editorInputs","entries","sort","key","push","EditorInput","creatingNewEditor","filter","onClick","setValue","ref","useRef","spellCheck","type","onKeyDown","keyCode","current","blur","handleKeyPress","onBlur","BttvForm","useForm","register","handleSubmit","errors","formState","onSubmit","data","Rewards","Bttv","isDefault","cost","Number","maxPerStream","maxPerUserPerStream","globalCooldownSeconds","globalCooldownMinutes","src","alt","ID","defaultValue","title","required","prompt","disabled","backgroundColor","placeholder","defaultChecked","enabled","Dashboard","useTitle","renderKey","setRenderKey","onSave","onError","onUserConfigChange","changeCounter","setChangeCounter","fetchConfig","endPoint","GET","catch","useEffect","useDebounce","POST","DELETE","useUserConfig","userCfg","Teaser","Home","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f23ded5f.chunk.js","sourcesContent":["export function createLoginUrl(apiBaseUrl: string, twitchClientId: string): URL {\n    const url = new URL(\"https://id.twitch.tv/oauth2/authorize\")\n    url.searchParams.set(\"client_id\", twitchClientId);\n    url.searchParams.set(\"redirect_uri\", apiBaseUrl + \"/api/callback\");\n    url.searchParams.set(\"response_type\", \"code\");\n    url.searchParams.set(\"scope\", \"channel:read:redemptions channel:manage:redemptions\");\n\n    return url;\n}","export function getCookie(name: string): string | null {\n    const v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\n    return v ? v[2] : null;\n}\n\nexport function setCookie(name: string, value: string, days: number) {\n    const d = new Date();\n    d.setTime(d.getTime() + 24 * 60 * 60 * 1000 * days);\n    document.cookie = name + \"=\" + value + \";path=/;expires=\" + d.toUTCString();\n}\n\nexport function deleteCookie(name: string) {\n    setCookie(name, '', -1);\n}\n","import { Store as PStore } from \"pullstate\";\nimport { getCookie } from \"./service/cookie\";\n\nexport interface Store {\n    twitchClientId: string,\n    baseUrl: string,\n    apiBaseUrl: string,\n    scToken: string | null,\n    managing: string,\n}\n\nexport const store = new PStore<Store>({\n    twitchClientId: process.env.REACT_APP_TWITCH_CLIENT_ID ?? \"\",\n    apiBaseUrl: process.env.REACT_APP_API_BASE_URL ?? \"\",\n    baseUrl: process.env.REACT_APP_BASE_URL ?? \"\",\n    scToken: getCookie(\"scToken\"),\n    managing: \"\",\n});","import { Link } from \"react-router-dom\";\nimport { createLoginUrl } from \"../factory/createLoginUrl\";\nimport { store } from \"../store\";\n\n\nexport function Navbar() {\n    const scToken = store.useState(s => s.scToken);\n\n    let buttons = <Login className=\"p-4 rounded shadow bg-purple-800 hover:bg-purple-600\" />\n\n    if (scToken) {\n        buttons = <LoggedIn />;\n    }\n\n    return <div className=\"m-4 flex flex-row justify-end gap-4\">\n        {buttons}\n    </div>;\n}\n\nfunction LoggedIn() {\n    return <>\n        <Link to=\"/\" className=\"p-4 rounded shadow bg-gray-800 hover:bg-gray-700\">\n            Home\n        </Link>\n        <Link to=\"/dashboard\" className=\"p-4 rounded shadow bg-blue-900 hover:bg-blue-800\">\n            Dashboard\n        </Link>\n        <Login className={`p-4 rounded shadow opacity-25 bg-purple-800 hover:bg-purple-600`} />\n    </>;\n}\n\nfunction Login({ className }: { className?: string }) {\n    const { apiBaseUrl, twitchClientId } = store.getRawState();\n    const url = createLoginUrl(apiBaseUrl, twitchClientId);\n\n    return <a className={className} href={url.toString()}>Login</a>\n}","import { store } from \"../store\";\nimport { deleteCookie } from \"./cookie\";\n\nexport enum Method {\n    GET = \"GET\",\n    POST = \"POST\",\n    DELETE = \"POST\"\n}\n\nexport async function doFetch(method: Method, path: string, body: any = undefined) {\n    const {apiBaseUrl, scToken} = store.getRawState();\n\n    const headers: Record<string, string> = { 'content-type': 'application/json' }\n    if (scToken) {\n        headers.Authorization = `Bearer ${scToken}`\n    }\n\n    const config: RequestInit = {\n        method: method,\n        headers: {\n            ...headers,\n        },\n    }\n\n    if (body) {\n        config.body = JSON.stringify(body)\n    }\n\n    return window.fetch(`${apiBaseUrl}${path}`, config)\n        .then(async response => {\n            if (response.status === 401) {\n                deleteCookie(\"scToken\");\n                window.location.assign(\"/\")\n                return\n            }\n            if (response.ok) {\n                return await response.json()\n            } else {\n                const errorMessage = await response.text()\n                return Promise.reject(new Error(errorMessage))\n            }\n        })\n}","import { UserConfig } from \"../../hooks/useUserConfig\";\nimport { store } from \"../../store\";\n\nexport function Managing({ userConfig }: { userConfig: UserConfig | null | undefined }) {\n    if (userConfig?.Protected.EditorFor.length === 0) {\n        return null;\n    }\n    const managing = store.useState(s => s.managing);\n\n    return <div className=\"Managing\">\n        <select className=\"bg-gray-800 shadow rounded p-3\" onChange={e => store.update(s => { s.managing = e.target.value })} value={managing}>\n            {userConfig?.Protected.EditorFor.map(editorFor => <option key={editorFor} value={editorFor}>{editorFor}</option>)}\n            <option value=\"\">you</option>\n        </select>\n    </div>\n}","import React, { KeyboardEvent, useRef, useState } from \"react\";\nimport { SetUserConfig, UserConfig } from \"../../hooks/useUserConfig\";\nimport { store } from \"../../store\";\nimport { Managing } from \"./Managing\";\n\nexport function Menu({ userConfig, setUserConfig }: { userConfig: UserConfig | null | undefined, setUserConfig: SetUserConfig }) {\n    return <div className=\"flex flex-row flex-wrap gap-4 ml-4\">\n        <Managing userConfig={userConfig} />\n        <EditorManager setUserConfig={setUserConfig} userConfig={userConfig} />\n    </div>\n}\n\nfunction EditorManager({ setUserConfig, userConfig }: { setUserConfig: SetUserConfig, userConfig: UserConfig | null | undefined }) {\n    const managing = store.useState(s => s.managing);\n    \n    const loadedEditors: Record<string, string> = {};\n    userConfig?.Editors.map(editor => {\n        loadedEditors[\"e\" + (Object.values(loadedEditors).length + 1)] = editor\n        return editor;\n    });\n\n    const [editors, setEditors] = useState<Record<string, string>>(loadedEditors);\n\n    const changeEditor = (id: string, value: string | null) => {\n        const newEditors = { ...editors };\n\n        if (value === null) {\n            delete newEditors[id];\n            setEditors(newEditors);\n        } else {\n            newEditors[id] = value;\n            setEditors(newEditors);\n        }\n\n        // @ts-ignore\n        setUserConfig({ ...userConfig, Editors: Object.values(newEditors) })\n    };\n\n    const editorInputs = [];\n    for (const [key, value] of Object.entries(editors).sort()) {\n        editorInputs.push(<EditorInput key={key} editor={value} id={key} onChange={changeEditor} />);\n    }\n\n    const creatingNewEditor = Object.values(editors).filter(editor => editor.length === 0).length === 0;\n\n    if (managing !== \"\") {\n        return null;\n    }\n\n    return <>\n        {editorInputs}\n        {creatingNewEditor && <div className=\"bg-green-700 rounded shadow p-3 cursor-pointer hover:bg-green-600\" onClick={() => {\n            const newEditors = { ...editors };\n            newEditors[\"e\" + (Object.values(editors).length + 1)] = \"\";\n            setEditors(newEditors);\n        }}>add editor</div>}\n    </>\n}\n\nfunction EditorInput({ id, editor, onChange }: { id: string, editor: string, onChange: (id: string, value: string | null) => void }) {\n    const [value, setValue] = useState(editor);\n    const ref = useRef<HTMLInputElement>(null);\n\n    const handleKeyPress = (e: KeyboardEvent) => {\n        if (e.keyCode === 13) {\n            if (ref.current !== null) {\n                ref.current.blur();\n            }\n        }\n    };\n\n    return <div className=\"flex items-center\">\n        <input className=\"bg-blue-900 hover:bg-blue-800 focus:bg-blue:800 p-3 rounded shadow w-24 rounded-r-none truncate\" spellCheck={false} ref={ref} type=\"text\" value={value} onKeyDown={(e) => handleKeyPress(e)} onChange={(e) => setValue(e.target.value)} onBlur={() => onChange(id, value)} key={editor} />\n        <span className=\"bg-red-900 p-3 px-1 font-bold opacity-25 hover:opacity-100 cursor-pointer rounded rounded-l-none\" onClick={() => onChange(id, null)}>X</span>\n    </div>;\n}","import { useForm } from \"react-hook-form\";\nimport { SetUserConfig, UserConfig } from \"../../../hooks/useUserConfig\";\n\ninterface BttvRewardForm {\n    title: string;\n    cost: string;\n    backgroundColor: string;\n    maxPerStream: string;\n    maxPerUserPerStream: string;\n    globalCooldownMinutes: string;\n    enabled: boolean;\n    isDefault: boolean\n}\n\nexport function BttvForm({ userConfig, setUserConfig }: { userConfig: UserConfig, setUserConfig: SetUserConfig }) {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const onSubmit = (data: BttvRewardForm) => setUserConfig(\n        {\n            ...userConfig,\n            Rewards: {\n                ...userConfig?.Rewards,\n                Bttv: {\n                    ...data,\n                    isDefault: false,\n                    cost: Number(data.cost),\n                    maxPerStream: Number(data.maxPerStream),\n                    maxPerUserPerStream: Number(data.maxPerUserPerStream),\n                    globalCooldownSeconds: Number(data.globalCooldownMinutes) * 60\n                }\n            }\n        }\n    );\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className=\"max-w-5xl m-4 p-4 bg-gray-800 rounded shadow\">\n            <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-5\">\n                    <img src=\"/images/bttv.png\" alt=\"BetterTTV Logo\" className=\"w-16\" />\n                    <h3 className=\"text-xl font-bold\">BetterTTV Emote</h3>\n                </div>\n                <div className=\"text-gray-600\">\n                    {userConfig.Rewards.Bttv?.ID}\n                </div>\n            </div>\n            <p className=\"my-2 mb-4 text-gray-400\">\n                <strong>Make sure <span className=\"text-green-600\">gempbot</span> is BetterTTV editor</strong><br />\n                This will swap out 1 emote constantly. If the previous emote is not found it will use a free slot or remove a random emote.\n            </p>\n\n            <label className=\"block\">\n                Title\n                <input defaultValue={userConfig.Rewards.Bttv?.title} spellCheck={false} {...register(\"title\", { required: true })} className=\"form-input border-none bg-gray-700 mx-2 p-2 rounded shadow\" />\n                {errors.title && <span className=\"text-red-700\">required</span>}\n            </label>\n\n            <label className=\"block mt-3\">\n                Cost\n                <input defaultValue={userConfig.Rewards.Bttv?.cost} type=\"number\" spellCheck={false} {...register(\"cost\", { required: true })} className=\"form-input border-none bg-gray-700 mx-2 p-2 rounded shadow\" />\n                {errors.cost && <span className=\"text-red-700\">required</span>}\n            </label>\n\n            <label className=\"block mt-3\">\n                Prompt\n                <input defaultValue={userConfig.Rewards.Bttv?.prompt} spellCheck={false} disabled {...register(\"prompt\")} className=\"block cursor-not-allowed truncate form-input w-full opacity-25 border-none bg-gray-700 mt-2 p-2 rounded shadow\" />\n            </label>\n\n            <label className=\"block mt-3\">\n                Background Color\n                <input defaultValue={userConfig.Rewards.Bttv?.backgroundColor} placeholder=\"#FFFFFF\" spellCheck={false} {...register(\"backgroundColor\")} className=\"form-input border-none bg-gray-700 mx-2 p-2 rounded shadow\" />\n            </label>\n\n            <div className=\"mt-8 font-bold\">Limits <span className=\"text-gray-500\">(0 = unlimited)</span></div>\n\n            <label className=\"flex items-center mt-3\">\n                Max per Stream\n                <input defaultValue={userConfig.Rewards.Bttv?.maxPerStream} placeholder=\"0\" type=\"number\" spellCheck={false} {...register(\"maxPerStream\")} className=\"form-input border-none bg-gray-700 mx-2 p-2 rounded shadow\" />\n            </label>\n\n            <label className=\"flex items-center mt-3\">\n                Max per User per Stream\n                <input defaultValue={userConfig.Rewards.Bttv?.maxPerUserPerStream} placeholder=\"0\" type=\"number\" spellCheck={false} {...register(\"maxPerUserPerStream\")} className=\"form-input border-none bg-gray-700 mx-2 p-2 rounded shadow\" />\n            </label>\n\n            <label className=\"flex items-center mt-3\">\n                Global Cooldown in Minutes\n                <input defaultValue={(userConfig.Rewards.Bttv?.globalCooldownSeconds ?? 0) / 60} placeholder=\"0\" type=\"number\" spellCheck={false} {...register(\"globalCooldownMinutes\")} className=\"form-input border-none bg-gray-700 mx-2 p-2 rounded shadow\" />\n            </label>\n\n            <div className=\"flex flex-row justify-between items-center select-none\">\n                <label className=\"flex items-center\">\n                    <input defaultChecked={userConfig.Rewards.Bttv?.enabled} type=\"checkbox\" {...register(\"enabled\")} className=\"form-checkbox rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-offset-0 focus:ring-indigo-200 focus:ring-opacity-50\" />\n                    <span className=\"ml-2\">Enabled</span>\n                </label>\n                <input type=\"submit\" className=\"bg-green-700 hover:bg-green-600 p-2 rounded shadow block mt-3\" value=\"save\" />\n            </div>\n        </form>\n    );\n}","import { useState } from \"react\";\nimport { useTitle } from \"react-use\";\nimport { useUserConfig } from \"../../hooks/useUserConfig\";\nimport { Menu } from \"../Dashboard/Menu\";\nimport { BttvForm } from \"../Dashboard/RewardForms/BttvForm\";\n\nexport function Dashboard() {\n    useTitle(\"bitraft - Dashboard\");\n    const [renderKey, setRenderKey] = useState(1);\n    const [userCfg, setUserConfig] = useUserConfig(undefined, undefined, () => setRenderKey(renderKey + 1));\n\n    if (!userCfg) {\n        return null;\n    }\n\n    // force re-mount when switching the channel to manage, to re-render forms and their defaultValues\n    return <div key={renderKey}>\n        <Menu userConfig={userCfg} setUserConfig={setUserConfig} />\n        <BttvForm userConfig={userCfg} setUserConfig={setUserConfig} />\n    </div>\n}","import { useEffect, useState } from \"react\";\nimport { useDebounce } from \"react-use\";\nimport { doFetch, Method } from \"../service/doFetch\";\nimport { store } from \"../store\";\n\nexport interface UserConfig {\n    Editors: Array<string>;\n    Protected: Protected;\n    Rewards: Rewards;\n}\n\nexport interface Rewards {\n    Bttv: null | BttvReward\n}\n\nexport interface BttvReward {\n    title: string;\n    prompt?: string;\n    cost: number;\n    backgroundColor?: string;\n    isMaxPerStreamEnabled?: boolean;\n    maxPerStream?: number;\n    isUserInputRequired?: boolean;\n    isMaxPerUserPerStreamEnabled?: boolean;\n    maxPerUserPerStream?: number;\n    isGlobalCooldownEnabled?: boolean;\n    globalCooldownSeconds?: number;\n    shouldRedemptionsSkipRequestQueue?: boolean;\n    enabled?: boolean;\n    isDefault: boolean;\n    ID?: string;\n}\n\nexport interface Protected {\n    EditorFor: Array<string>;\n}\n\nexport type SetUserConfig = (userConfig: UserConfig | null) => void;\n\nexport function useUserConfig(onSave: () => void = () => { }, onError: () => void = () => { }, onUserConfigChange: () => void = () => {}): [UserConfig | null | undefined, SetUserConfig] {\n    const [userConfig, setUserConfig] = useState<UserConfig | null | undefined>(undefined);\n    const [changeCounter, setChangeCounter] = useState(0);\n    const managing = store.useState(s => s.managing);\n\n    const fetchConfig = () => {\n        let endPoint = \"/api/userConfig\";\n        if (managing) {\n            endPoint += `?managing=${managing}`;\n        }\n        doFetch(Method.GET, endPoint).then((userConfig) => setUserConfig(userConfig)).catch(onError)\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(fetchConfig, [managing]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(onUserConfigChange, [userConfig]);\n\n    useDebounce(() => {\n        if (changeCounter && userConfig) {\n            let endPoint = \"/api/userConfig\";\n            if (managing) {\n                endPoint += `?managing=${managing}`;\n            }\n            doFetch(Method.POST, endPoint, userConfig).then((data: UserConfig) => {\n                setUserConfig(data);\n                onSave();\n            }).catch(onError);\n        } else if (changeCounter && userConfig === null) {\n            doFetch(Method.DELETE, \"/api/userConfig\").then(fetchConfig).catch(onError);\n        }\n    }, 500, [changeCounter]);\n\n    const setCfg = (config: UserConfig | null) => {\n        setUserConfig(config);\n        setChangeCounter(changeCounter + 1);\n    };\n\n    return [userConfig, setCfg]\n}","import { createLoginUrl } from \"../../factory/createLoginUrl\";\nimport { store } from \"../../store\";\n\nexport function Teaser() {\n    const { apiBaseUrl, twitchClientId } = store.useState(s => ({ apiBaseUrl: s.apiBaseUrl, twitchClientId: s.twitchClientId }));\n    const url = createLoginUrl(apiBaseUrl, twitchClientId);\n\n\n    return <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto\">\n            <div className=\"flex flex-col text-center w-full mb-20\">\n                <h2 className=\"text-xs text-indigo-400 tracking-widest font-medium title-font mb-1\">bitraft</h2>\n                <h1 className=\"sm:text-3xl text-2xl font-medium title-font mb-4 text-gray-100\">Channel Point Rewards</h1>\n                <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base\">Offer your viewers special channel point rewards</p>\n            </div>\n            <div className=\"flex flex-wrap\">\n                <div className=\"xl:w-1/4 lg:w-1/2 md:w-full px-8 py-6 border-l-2 border-gray-200 border-opacity-60\">\n                    <h2 className=\"text-lg sm:text-xl text-gray-100 font-medium title-font mb-2\">BetterTTV Emotes</h2>\n                    <p className=\"leading-relaxed text-base mb-4 text-gray-400\">Allow viewers to add new BetterTTV emotes to your chat</p>\n                </div>\n            </div>\n            <div className=\"flex justify-center\">\n                <a className=\"m-auto mx-auto mt-16 text-white bg-purple-800 hover:bg-purple-600 border-0 py-2 px-8 focus:outline-none rounded text-lg\" href={url.toString()}>Login to Get Started</a>\n            </div>\n        </div>\n    </section>\n}","import { useTitle } from \"react-use\";\nimport { Teaser } from \"../Home/Teaser\";\n\nexport function Home() {\n    useTitle(\"bitraft\");\n\n    return <div>\n        <Teaser />\n    </div>\n}","import {\n    BrowserRouter as Router,\n    Route, Switch\n} from \"react-router-dom\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Dashboard } from \"./components/Routes/Dashboard\";\nimport { Home } from \"./components/Routes/Home\";\n\n\nexport function App() {\n    return <Router>\n        <Navbar />\n        <Switch>\n            <Route path=\"/dashboard\">\n                <Dashboard />\n            </Route>\n            <Route path=\"/\">\n                <Home />\n            </Route>\n        </Switch>\n    </Router>\n}","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport \"./index.css\";\n\nReactDOM.render(\n    <StrictMode>\n        <App />\n    </StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}